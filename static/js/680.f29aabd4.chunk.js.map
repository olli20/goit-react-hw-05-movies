{"version":3,"file":"static/js/680.f29aabd4.chunk.js","mappings":"oKAGMA,EAAa,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,EAAWH,EAAMI,KAAI,YAAkB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,MAC7B,OAAQ,yBACI,SAAC,KAAD,CAAMC,MAAO,CAACC,KAAMP,GAAWQ,GAAE,0CAAqCJ,GAAtE,SAA6EC,KADxED,EAGpB,IAED,OACI,wBACKF,GAGZ,EAED,MAEAJ,EAAWW,aAAe,CACtBV,MAAO,G,oICiDX,UA/DiB,WACb,OAA0BW,EAAAA,EAAAA,UAAS,CAC/BC,OAAQ,MACRZ,MAAO,GACPa,SAAS,EACTC,MAAO,OAJX,eAAOP,EAAP,KAAcQ,EAAd,MAOAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAW,mCAAG,2FAChBF,GAAS,SAAAG,GAAS,yBACXA,GADW,IAEdL,SAAS,EACTC,MAAO,MAHO,IADF,mBAOOK,EAAAA,EAAAA,IAAiBZ,EAAMK,QAP9B,OAONQ,EAPM,OAQZL,GAAS,SAAAG,GACL,OAAO,kBACAA,GADP,IAEIlB,MAAM,GAAD,eAAMkB,EAAUlB,QAAhB,OAA0BoB,KAEtC,IAbW,gDAgBZL,GAAS,SAAAG,GAAS,yBACXA,GADW,IAEdJ,MAAK,MAFS,IAhBN,yBAqBZC,GAAS,SAAAG,GACL,OAAO,kBACAA,GADP,IAEIL,SAAS,GAChB,IAzBW,4EAAH,qDA4BjBI,GACH,GAAE,CAACF,EAAUR,EAAMK,SAEpB,IAAOZ,EAAkBO,EAAlBP,MAAOa,EAAWN,EAAXM,QAEd,OACI,iBAAKQ,UAAU,YAAf,WACI,6CAGA,6BACI,mBAAOC,QAAQ,GAAf,WACI,kBAAOC,KAAK,QAAQC,KAAK,QAD7B,UAIA,mBAAOF,QAAQ,GAAf,WACI,kBAAOC,KAAK,QAAQC,KAAK,SAD7B,aAKHX,IAAW,SAAC,IAAD,KACZ,SAAC,IAAD,CAAYb,MAAOA,MAG9B,C,sLClEKyB,E,OAAWC,EAAAA,OAAa,CAC1BC,QAAS,+BACTC,OAAQ,CACJC,QAAS,sCAIJV,EAAgB,mCAAG,WAAMP,GAAN,yFACPa,EAASK,IAAT,0BAAgClB,GAAU,CAAC,GADpC,uBACrBQ,EADqB,EACrBA,KADqB,kBAIrBA,EAAKW,SAJgB,2CAAH,sDAOhBC,EAAY,mCAAG,WAAMC,GAAN,yFACHR,EAASK,IAAT,iBAAuBG,GAAY,CAAC,GADjC,uBACjBb,EADiB,EACjBA,KADiB,kBAGjBA,GAHiB,2CAAH,sDAMZc,EAAU,mCAAG,WAAMD,GAAN,yFACDR,EAASK,IAAT,iBAAuBG,EAAvB,YAA2C,CAAC,GAD3C,uBACfb,EADe,EACfA,KADe,kBAGfA,EAAKW,SAHU,2CAAH,sDAMVI,EAAO,mCAAG,WAAMF,GAAN,yFACER,EAASK,IAAT,iBAAuBG,EAAvB,YAA2C,CAAC,GAD9C,uBACZb,EADY,EACZA,KADY,kBAGZA,EAAKgB,MAHO,2CAAH,sDAMPC,EAAY,mCAAG,WAAMC,GAAN,8FAAaC,EAAb,+BAAoB,EAApB,SACHd,EAASK,IAAT,gBAA8B,CAC/CF,OAAQ,CACJU,MAAAA,EACAC,KAAAA,KAJgB,uBACjBnB,EADiB,EACjBA,KADiB,kBAQjBA,EAAKW,SARY,2CAAH,qD","sources":["modules/MoviesList/MoviesList.jsx","pages/HomePage/HomePage.jsx","shared/api/api.js"],"sourcesContent":["import {Link, useLocation} from 'react-router-dom';\nimport {PropTypes} from 'prop-types';\n\nconst MoviesList = ({items}) => {\n    const location = useLocation();\n    const elements = items.map(({id, title}) => {\n        return (<li key={id}>\n                    <Link state={{from: location}} to={`/goit-react-hw-05-movies/movies/${id}`}>{title}</Link>\n                </li>);\n    });\n\n    return (\n        <ul>\n            {elements}\n        </ul>\n    )\n}\n\nexport default MoviesList;\n\nMoviesList.defaultProps = {\n    items: []\n}\n\nMoviesList.propTypes = {\n    items: PropTypes.array.isRequired\n}","import {useState, useEffect} from 'react';\n\nimport MoviesList from '../../modules/MoviesList/MoviesList';\nimport Loading from '../../shared/components/Loading/Loading';\n\nimport {getPopularMovies} from '../../shared/api/api';\n\nconst HomePage = () => {\n    const [state, setState] = useState({\n        period: \"day\",\n        items: [],\n        loading: false,\n        error: null,\n    })\n\n    useEffect(() => {\n        const fetchMovies = async() => {\n            setState(prevState => ({\n                ...prevState, \n                loading: true,\n                error: null,\n            }));\n            try {\n                const data = await getPopularMovies(state.period);\n                setState(prevState => {\n                    return {\n                        ...prevState,\n                        items: [...prevState.items, ...data]\n                    }\n                });\n            }\n            catch (error) {\n                setState(prevState => ({\n                    ...prevState,\n                    error,\n                }));\n            } finally {\n                setState(prevState => {\n                    return {\n                        ...prevState, \n                        loading: false }\n                });\n            }\n        }\n        fetchMovies();\n    }, [setState, state.period])\n\n    const {items, loading} = state;\n\n    return(\n        <div className=\"container\">\n            <h2>Trending Movies</h2>\n\n            {/* options */}\n            <form>\n                <label htmlFor=\"\">\n                    <input type=\"radio\" name=\"day\" />\n                    Day\n                </label>\n                <label htmlFor=\"\">\n                    <input type=\"radio\" name=\"week\" />\n                    Week\n                </label>\n            </form>\n            {loading && <Loading />}\n            <MoviesList items={items} />\n        </div>\n    )\n}\n\nexport default HomePage;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n    params: {\n        api_key: \"280dfc47f55a5a95f0363880d2199c9a\",\n    }\n});\n\nexport const getPopularMovies = async(period) => {\n    const {data} = await instance.get(`/trending/movie/${period}`, {\n    })\n\n    return data.results;\n}\n\nexport const getMovieById = async(movie_id) => {\n    const {data} = await instance.get(`/movie/${movie_id}`, {})\n\n    return data;\n}\n\nexport const getReviews = async(movie_id) => {\n    const {data} = await instance.get(`/movie/${movie_id}/reviews`, {})\n\n    return data.results;\n}\n\nexport const getCast = async(movie_id) => {\n    const {data} = await instance.get(`/movie/${movie_id}/credits`, {})\n\n    return data.cast;\n}\n\nexport const searchMovies = async(query, page = 1) => {\n    const {data} = await instance.get(`/search/movie`, {\n        params: {\n            query,\n            page,\n        }\n    })\n\n    return data.results;\n}"],"names":["MoviesList","items","location","useLocation","elements","map","id","title","state","from","to","defaultProps","useState","period","loading","error","setState","useEffect","fetchMovies","prevState","getPopularMovies","data","className","htmlFor","type","name","instance","axios","baseURL","params","api_key","get","results","getMovieById","movie_id","getReviews","getCast","cast","searchMovies","query","page"],"sourceRoot":""}