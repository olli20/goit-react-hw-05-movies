{"version":3,"file":"static/js/498.08bba775.chunk.js","mappings":"oKAGMA,EAAa,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,EAAWH,EAAMI,KAAI,YAAkB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,MAC7B,OAAQ,yBACI,SAAC,KAAD,CAAMC,MAAO,CAACC,KAAMP,GAAWQ,GAAE,0CAAqCJ,GAAtE,SAA6EC,KADxED,EAGpB,IAED,OACI,wBACKF,GAGZ,EAED,MAEAJ,EAAWW,aAAe,CACtBV,MAAO,G,gKCUX,EA7ByB,SAAC,GAAgB,IAAfW,EAAc,EAAdA,SACvB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOL,EAAP,KAAcM,EAAd,KAcA,OACI,kBAAMF,SARW,SAAAG,GACjBA,EAAMC,iBACNJ,EAASJ,GACTS,QAAQC,IAAI,OAAQV,GACpBM,EAAS,GACZ,EAGG,WACI,kBACIK,KAAK,QACLC,MAAOZ,EACPa,SAhBS,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACnBR,EAASQ,EAAOF,MACnB,EAeWG,YAAY,eACZC,UAAQ,KAEZ,mBAAQC,KAAK,SAAb,sBAGX,E,kBC+CD,EAnEyB,WACrB,OAA0BZ,EAAAA,EAAAA,UAAS,CAC/BZ,MAAO,GACPyB,KAAM,EACNC,SAAS,EACTC,MAAO,OAJX,eAAOpB,EAAP,KAAcM,EAAd,KAOA,GAAwCe,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAASF,EAAaG,IAAI,WAEhCC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAW,mCAAG,oGAEZrB,GAAS,SAAAsB,GAAS,yBACXA,GADW,IAEdT,SAAS,GAFK,IAFN,UAMOU,EAAAA,EAAAA,IAAaL,EAAQxB,EAAMkB,MANlC,OAMNY,EANM,OAOZxB,GAAS,SAAAsB,GAAS,yBACXA,GADW,IAEdnC,MAAM,GAAD,eAAMmC,EAAUnC,QAAhB,OAA0BqC,KAFjB,IAPN,gDAYZxB,GAAS,SAAAsB,GAAS,yBACXA,GADW,IAEdR,MAAK,MAFS,IAZN,yBAiBZd,GAAS,SAAAsB,GAAS,yBACXA,GADW,IAEdT,SAAS,GAFK,IAjBN,4EAAH,qDAuBdK,GACCG,GAGH,GAAE,CAACH,EAAQxB,EAAMkB,KAAMZ,IAE5B,IAWOb,EAAkBO,EAAlBP,MAAO0B,EAAWnB,EAAXmB,QACRY,EAAUtC,EAAMuC,OAAS,EAE/B,OACI,iBAAKC,UAAU,YAAf,WACI,gDACA,SAAC,EAAD,CAAkB7B,SAjBT,SAACoB,GACdD,EAAgB,CAACC,OAAAA,GACpB,IAgBQO,IAAW,SAACvC,EAAA,EAAD,CAAYC,MAAOA,IAC9B0B,IAAW,SAACe,EAAA,EAAD,IACXH,IAAW,mBAAQI,QAhBL,WACnB7B,GAAS,SAAAsB,GAAS,yBACXA,GADW,IAEdV,KAAMU,EAAUV,KAAO,GAFT,GAIrB,EAWmB,yBAGvB,C,sLCxEKkB,E,OAAWC,EAAAA,OAAa,CAC1BC,QAAS,+BACTC,OAAQ,CACJC,QAAS,sCAIJC,EAAgB,mCAAG,WAAMC,GAAN,8FAAcxB,EAAd,+BAAqB,EAArB,SACPkB,EAASX,IAAT,0BAAgCiB,GAAU,CAC3DH,OAAQ,CACJrB,KAAAA,KAHoB,uBACrBY,EADqB,EACrBA,KADqB,kBAOrBA,EAAKa,SAPgB,2CAAH,sDAUhBC,EAAY,mCAAG,WAAMC,GAAN,yFACHT,EAASX,IAAT,iBAAuBoB,GAAY,CAAC,GADjC,uBACjBf,EADiB,EACjBA,KADiB,kBAEjBA,GAFiB,2CAAH,sDAKZgB,EAAU,mCAAG,WAAMD,GAAN,yFACDT,EAASX,IAAT,iBAAuBoB,EAAvB,YAA2C,CAAC,GAD3C,uBACff,EADe,EACfA,KADe,kBAEfA,EAAKa,SAFU,2CAAH,sDAKVI,EAAO,mCAAG,WAAMF,GAAN,yFACET,EAASX,IAAT,iBAAuBoB,EAAvB,YAA2C,CAAC,GAD9C,uBACZf,EADY,EACZA,KADY,kBAEZA,EAAKkB,MAFO,2CAAH,sDAKPnB,EAAY,mCAAG,WAAMoB,GAAN,8FAAa/B,EAAb,+BAAoB,EAApB,SACHkB,EAASX,IAAT,gBAA8B,CAC/Cc,OAAQ,CACJU,MAAAA,EACA/B,KAAAA,KAJgB,uBACjBY,EADiB,EACjBA,KADiB,kBAQjBA,EAAKa,SARY,2CAAH,qD","sources":["modules/MoviesList/MoviesList.jsx","modules/MoviesSearchForm/MoviesSearchForm.jsx","pages/MoviesSearchPage/MoviesSearchPage.jsx","shared/api/api.js"],"sourcesContent":["import {Link, useLocation} from 'react-router-dom';\nimport {PropTypes} from 'prop-types';\n\nconst MoviesList = ({items}) => {\n    const location = useLocation();\n    const elements = items.map(({id, title}) => {\n        return (<li key={id}>\n                    <Link state={{from: location}} to={`/goit-react-hw-05-movies/movies/${id}`}>{title}</Link>\n                </li>);\n    });\n\n    return (\n        <ul>\n            {elements}\n        </ul>\n    )\n}\n\nexport default MoviesList;\n\nMoviesList.defaultProps = {\n    items: []\n}\n\nMoviesList.propTypes = {\n    items: PropTypes.array.isRequired\n}","import {useState} from 'react';\n\nconst MoviesSearchForm = ({onSubmit}) => {\n    const [state, setState] = useState(\"\");\n \n\n    const handleChange = ({target}) => {\n        setState(target.value);\n    }\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        onSubmit(state);\n        console.log(\"Set \", state);\n        setState(\"\");\n    }\n\n    return(\n        <form onSubmit={handleSubmit}>\n            <input \n                name=\"query\"\n                value={state}\n                onChange={handleChange}\n                placeholder=\"Movie search\"\n                required\n            />\n            <button type=\"submit\">Search</button>\n        </form>\n    )\n}\n\nexport default MoviesSearchForm;","import {useState, useEffect} from 'react';\nimport {useSearchParams} from 'react-router-dom';\n\nimport {searchMovies} from '../../shared/api/api';\n\nimport MoviesSearchForm from '../../modules/MoviesSearchForm/MoviesSearchForm';\nimport MoviesList from '../../modules/MoviesList/MoviesList';\nimport Loading from '../../shared/components/Loading/Loading';\n\nconst MoviesSearchPage = () => {\n    const [state, setState] = useState({\n        items: [],\n        page: 1,\n        loading: false,\n        error: null,\n    });\n\n    const [searchParams, setSearchParams] = useSearchParams();\n\n    const search = searchParams.get(\"search\");\n\n    useEffect(() => {\n        const fetchMovies = async() => {\n            try {\n                setState(prevState =>({\n                    ...prevState,\n                    loading: true,\n                }));\n                const data = await searchMovies(search, state.page);\n                setState(prevState =>({\n                    ...prevState,\n                    items: [...prevState.items, ...data],\n                }));\n            } catch (error) {\n                setState(prevState =>({\n                    ...prevState,\n                    error,\n                }));\n            } finally {\n                setState(prevState =>({\n                    ...prevState,\n                    loading: false,\n                }));\n            }\n        }\n        if(search) {\n            fetchMovies();\n        }\n            \n        }, [search, state.page, setState])\n\n    const onSubmit = (search) => {\n        setSearchParams({search});\n    }\n\n    const handleShowMore = () => {\n        setState(prevState =>({\n            ...prevState,\n            page: prevState.page + 1,\n        }));\n    }\n\n    const {items, loading} = state;\n    const isItems = items.length > 0;\n\n    return(\n        <div className=\"container\">\n            <h2>Movies Search Page</h2>\n            <MoviesSearchForm onSubmit={onSubmit} />\n            {isItems && <MoviesList items={items} />}\n            {loading && <Loading />}\n            {isItems && <button onClick={handleShowMore}>Show more</button>}\n        </div>\n    )   \n}\n\nexport default MoviesSearchPage;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n    params: {\n        api_key: \"280dfc47f55a5a95f0363880d2199c9a\",\n    }\n});\n\nexport const getPopularMovies = async(period, page = 1) => {\n    const {data} = await instance.get(`/trending/movie/${period}`, {\n        params: {\n            page,\n        }\n    })\n\n    return data.results;\n}\n\nexport const getMovieById = async(movie_id) => {\n    const {data} = await instance.get(`/movie/${movie_id}`, {})\n    return data;\n}\n\nexport const getReviews = async(movie_id) => {\n    const {data} = await instance.get(`/movie/${movie_id}/reviews`, {})\n    return data.results;\n}\n\nexport const getCast = async(movie_id) => {\n    const {data} = await instance.get(`/movie/${movie_id}/credits`, {})\n    return data.cast;\n}\n\nexport const searchMovies = async(query, page = 1) => {\n    const {data} = await instance.get(`/search/movie`, {\n        params: {\n            query,\n            page,\n        }\n    })\n\n    return data.results;\n}"],"names":["MoviesList","items","location","useLocation","elements","map","id","title","state","from","to","defaultProps","onSubmit","useState","setState","event","preventDefault","console","log","name","value","onChange","target","placeholder","required","type","page","loading","error","useSearchParams","searchParams","setSearchParams","search","get","useEffect","fetchMovies","prevState","searchMovies","data","isItems","length","className","Loading","onClick","instance","axios","baseURL","params","api_key","getPopularMovies","period","results","getMovieById","movie_id","getReviews","getCast","cast","query"],"sourceRoot":""}