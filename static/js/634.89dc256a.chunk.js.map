{"version":3,"file":"static/js/634.89dc256a.chunk.js","mappings":"iPACA,EAAuB,0BAAvB,EAA2D,6BAA3D,EAAiG,4BAAjG,EAAqI,2BAArI,EAAuK,0BAAvK,EAAiN,mCAAjN,EAA4P,2BAA5P,EAAiS,6B,SCU3RA,EAAa,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACXC,GAAWC,EAAAA,EAAAA,MAEjB,OACI,SAACC,EAAA,EAAD,CAAMC,KAAK,UAAX,SAEQJ,EAAMK,KAAI,YAAkE,IAAhEC,EAA+D,EAA/DA,GAAIC,EAA2D,EAA3DA,MAAOC,EAAoD,EAApDA,YAAaC,EAAuC,EAAvCA,aAAuC,IAAzBC,aAAAA,OAAyB,MAAV,KAAU,EACjEC,GAAOC,EAAAA,EAAAA,IAAWF,GAClBG,GAAoB,OAAXL,QAAW,IAAXA,OAAA,EAAAA,EAAaM,QAAS,EAAtB,yCAA4DN,GAAgBO,EAE3F,OAAQ,gBAAKC,UAAWC,EAAhB,UACI,iBAAKD,UAAWC,EAAhB,WACI,SAAC,KAAD,CAAMD,UAAWC,EAAeC,MAAO,CAACC,KAAMlB,GAAWmB,GAAE,kBAAad,GAAxE,UACI,gBAAKU,UAAWC,EAAcI,IAAKR,EAAQS,IAAI,eAEnD,iBAAKN,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,UAAsC,SAACM,EAAA,EAAD,CAAQC,KAAMf,OACpD,SAAC,KAAD,CAAMS,MAAO,CAACC,KAAMlB,GAAWmB,GAAE,kBAAad,GAAMU,UAAWC,EAA/D,SAA8EV,IAC7EI,IAAQ,cAAGK,UAAWC,EAAd,SAA+BN,WARlBL,EAY7C,KAIhB,EAED,GAAemB,EAAAA,EAAAA,MAAK1B,GAEpBA,EAAW2B,aAAe,CACtB1B,MAAO,G,6ICzCX,EAA4B,gCAA5B,EAAqE,6B,mBCO/D2B,EAAc,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,OACtBC,GAAeC,EAAAA,EAAAA,cAAY,YAAe,IAAbC,EAAY,EAAZA,OAC/BJ,EAASI,EACZ,GAAE,CAACJ,IAEJ,OACI,SAACK,EAAA,EAAD,WACI,iBAAKjB,UAAWC,EAAhB,WACI,eAAID,UAAU,QAAd,8BACA,6BACI,mBAAOA,UAAWC,EAAlB,WACI,kBACIb,KAAK,QACL8B,KAAK,SACLC,MAAM,MACNP,SAAUE,EACVM,QAAoB,QAAXP,IANjB,aASA,mBAAOb,UAAWC,EAAlB,WACI,kBACIb,KAAK,QACL8B,KAAK,SACLC,MAAM,OACNP,SAAUE,EACVM,QAAoB,SAAXP,IANjB,uBAanB,EAED,GAAeJ,EAAAA,EAAAA,MAAKE,G,gDCsCpB,EAnEiB,WACb,OAA0BU,EAAAA,EAAAA,UAAS,CAC/BrC,MAAO,GACPsC,KAAM,EACNC,SAAS,EACTC,MAAO,OAJX,eAAOtB,EAAP,KAAcuB,EAAd,KAOA,GAA4BJ,EAAAA,EAAAA,UAAS,OAArC,eAAOR,EAAP,KAAea,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAW,mCAAG,2FAChBH,GAAS,SAAAI,GAAS,yBACXA,GADW,IAEdN,SAAS,EACTC,MAAO,MAHO,IADF,mBAOOM,EAAAA,EAAAA,IAAkBjB,EAAQX,EAAMoB,MAPvC,OAONS,EAPM,OAQZN,GAAS,SAAAI,GAAS,yBACXA,GADW,IAEd7C,MAAM,GAAD,eAAM6C,EAAU7C,QAAhB,OAA0B+C,KAFjB,IARN,gDAcZN,GAAS,SAAAI,GAAS,yBACXA,GADW,IAEdL,MAAK,MAFS,IAdN,yBAmBZC,GAAS,SAAAI,GAAS,yBACXA,GADW,IAEdN,SAAS,GAFK,IAnBN,4EAAH,qDAyBjBK,GACH,GAAE,CAACH,EAAUZ,EAAQX,EAAMoB,OAE5B,IAAMU,EAAqB,SAAChB,GACxBS,GAAS,SAAAI,GAAS,yBACXA,GADW,IAEd7C,MAAO,IAFO,IAIlB0C,EAAUV,EAAOG,MACpB,EAQMnC,EAAyBkB,EAAzBlB,MAAOuC,EAAkBrB,EAAlBqB,QAASC,EAAStB,EAATsB,MACjBS,EAAUjD,EAAMc,OAAS,EAE/B,OACI,iCACI,SAAC,EAAD,CAAac,SAAUoB,EAAoBnB,OAAQA,IAClDoB,IAAW,SAAClD,EAAA,EAAD,CAAYC,MAAOA,EAAO4B,SAAUoB,IAC/CT,IAAW,SAACW,EAAA,EAAD,IACXV,IAAS,SAACP,EAAA,EAAD,WAAW,SAACkB,EAAA,EAAD,oCACpBF,IAAYV,IAAW,SAACa,EAAA,EAAD,CAAgBC,QAhBzB,WACnBZ,GAAS,SAAAI,GAAS,yBACXA,GADW,IAEdP,KAAMO,EAAUP,KAAO,GAFT,GAIrB,EAW+B,yBAGnC,C,wLC5EKgB,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAZ,EAAiB,mCAAG,6GAAOa,EAAP,+BAAgB,MAAOrB,EAAvB,+BAA8B,EAA9B,SACRgB,EAASM,IAAT,0BAAgCD,GAAU,CAC/DF,OAAQ,CACNnB,KAAAA,KAH2B,uBACvBS,EADuB,EACvBA,KAKRc,QAAQC,IAAIf,EAAKgB,SANc,kBAOxBhB,EAAKgB,SAPmB,2CAAH,qDAUjBC,EAAY,mCAAG,WAAMC,GAAN,yFACHX,EAASM,IAAT,iBAAuBK,GAAY,CAAC,GADjC,uBAClBlB,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZmB,EAAU,mCAAG,WAAMD,GAAN,yFACDX,EAASM,IAAT,iBAAuBK,EAAvB,YAA2C,CAAC,GAD3C,uBAChBlB,EADgB,EAChBA,KADgB,kBAEjBA,EAAKgB,SAFY,2CAAH,sDAKVI,EAAO,mCAAG,WAAMF,GAAN,yFACEX,EAASM,IAAT,iBAAuBK,EAAvB,YAA2C,CAAC,GAD9C,uBACblB,EADa,EACbA,KADa,kBAEdA,EAAKqB,MAFS,2CAAH,sDAKPC,EAAY,mCAAG,WAAOC,GAAP,8FAAchC,EAAd,+BAAqB,EAArB,SACHgB,EAASM,IAAT,gBAA8B,CACnDH,OAAQ,CACNa,MAAAA,EACAhC,KAAAA,KAJsB,uBAClBS,EADkB,EAClBA,KADkB,kBAQnBA,GARmB,2CAAH,qD,+ECjCzB,EAA4B,mC,SCgB5B,EAVuB,SAAC,GAAgC,IAAD,IAA9BM,QAAAA,OAA8B,MAApB,KAAoB,EAAdkB,EAAc,EAAdA,SACrC,OACI,SAACtC,EAAA,EAAD,WACI,gBAAKjB,UAAWC,EAAhB,UACI,SAACuD,EAAA,EAAD,CAAQnB,QAASA,EAAjB,SAA2BkB,OAI1C,C,qECdD,EAAyB,uB,SCKnBC,EAAS,SAAC,GAAiD,IAAD,IAA/CnB,QAAAA,OAA+C,MAArC,KAAqC,MAA/BjD,KAAAA,OAA+B,MAAxB,SAAwB,EAAdmE,EAAc,EAAdA,SAC9C,OACI,gCACKE,QAAQpB,KAAY,mBAAQrC,UAAWC,EAAeoC,QAASA,EAASjD,KAAMA,EAA1D,SAAiEmE,KACpFE,QAAQpB,KAAY,mBAAQrC,UAAWC,EAAeb,KAAMA,EAAxC,SAA+CmE,MAGhF,EAED,GAAe9C,EAAAA,EAAAA,MAAK+C,E,sDCdpB,MAA0B,uBAA1B,EAA2D,uB,SCW3D,EARc,SAAC,GAAgB,IAAfD,EAAc,EAAdA,SACZ,OACI,gBAAKvD,UAAWC,EAAhB,UACI,cAAGD,UAAWC,EAAd,SAA+BsD,KAG1C,C,qECTD,EAAuB,mBAAvB,EAAmD,qB,SC6BnD,EAxBa,SAAC,GAAkC,IAAD,IAAhCnE,KAAAA,OAAgC,MAAzB,UAAyB,EAAdmE,EAAc,EAAdA,SAgBvBG,EAfmB,SAACtE,GACtB,IAAIuE,EAAO,GACX,OAAQvE,GACJ,IAAK,UAML,QACIuE,EAAO1D,QAJX,IAAK,SACD0D,EAAI,UAAM1D,EAAN,YAAqBA,GAKjC,OAAO0D,CACV,CAEiBC,CAAiBxE,GACnC,OACI,SAAC6B,EAAA,EAAD,WACI,gBAAKjB,UAAW0D,EAAhB,SAA4BH,KAGvC,C,wKCpBKhD,EAAS,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACPqD,GAAaC,EAAAA,EAAAA,IAAoBtD,GACjCuD,EAAUF,EAAa,EAEvBG,EADS,EACYC,KAAKC,GAAK,EAC/BC,EAAaH,EAAaA,EAAYH,EAAc,IAEpDO,GAAyBC,EAAAA,EAAAA,IAA0BR,GAEzD,OACI,iBAAK7D,UAAWC,EAAAA,EAAAA,OAAhB,WACI,gBAAKD,UAAWC,EAAAA,EAAAA,QAAhB,UACI,iBACIqE,MAAM,KACNC,OAAO,KACPC,QAAO,YAHX,WAKI,mBACIC,GAAG,KAAKC,GAAG,KAAKC,EAfrB,EAgBKC,YAAY,MACZ5E,UAAWC,EAAAA,EAAAA,YAEf,mBACIwE,GAAG,KAAKC,GAAG,KAAKC,EApBrB,EAqBKC,YAAY,MACZ5E,UAAWoE,EACXS,MAAO,CACHC,gBAAiBd,EACjBe,iBAAkBZ,GAEtBa,UAAU,4BAItB,iBAAMhF,UAAWC,EAAAA,EAAAA,aAAjB,SAAuC8D,EAAUF,EAAa,OAC7DA,EAAa,IAAK,iBAAM7D,UAAWC,EAAAA,EAAAA,YAAjB,iBAG9B,EAED,GAAeQ,EAAAA,EAAAA,MAAKF,E,gIC5CPuD,EAAsB,WAAoB,IAAnBmB,EAAkB,uDAAN,EAC5C,OAAOhB,KAAKiB,MAAkB,GAAZD,EACrB,EAEYrF,EAAa,SAACD,GACvB,GAAa,OAATA,GAA0B,KAATA,QAAyBwF,IAATxF,EAArC,CAGA,IAAMC,EAAaD,EAAO,YAC1B,OAAOyF,EAAAA,EAAAA,GAAOC,KAAKC,MAAM1F,GAAa,eAFrC,CAGJ,EAEYyE,EAA4B,SAACkB,GACtC,IAAI7B,EAAY8B,EAAAA,EAAAA,SAMhB,OALID,GAAU,GACV7B,EAAS,UAAM8B,EAAAA,EAAAA,SAAN,YAAgCA,EAAAA,EAAAA,MAClCD,EAAS,IAAMA,GAAU,KAChC7B,EAAS,UAAM8B,EAAAA,EAAAA,SAAN,YAAgCA,EAAAA,EAAAA,SAEtC9B,CACV,C,qBCvBD,KAAgB,OAAS,uBAAuB,QAAU,wBAAwB,SAAW,yBAAyB,SAAW,yBAAyB,OAAS,uBAAuB,KAAO,qBAAqB,aAAe,6BAA6B,YAAc,4B","sources":["webpack://react-homework-template/./src/modules/MoviesList/movies-list.module.scss?f232","modules/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/modules/OptionsForm/options-form.module.scss?0e1b","modules/OptionsForm/OptionsForm.jsx","pages/HomePage/HomePage.jsx","shared/api/api.js","webpack://react-homework-template/./src/shared/components/ButtonCentered/button-centered.module.scss?58b1","shared/components/ButtonCentered/ButtonCentered.jsx","webpack://react-homework-template/./src/shared/components/Button/button.module.scss?9580","shared/components/Button/Button.jsx","webpack://react-homework-template/./src/shared/components/Error/error.module.scss?3b72","shared/components/Error/Error.jsx","webpack://react-homework-template/./src/shared/components/Grid/grid.module.scss?5271","shared/components/Grid/Grid.jsx","shared/components/Rating/Rating.jsx","shared/utils/utils.js","webpack://react-homework-template/./src/shared/components/Rating/rating.module.scss?02c3"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"movies-list_item__7NzBA\",\"wrapper\":\"movies-list_wrapper__wAiz1\",\"poster\":\"movies-list_poster__MUsPh\",\"image\":\"movies-list_image__Fltm5\",\"meta\":\"movies-list_meta__v1aL4\",\"ratingWrapper\":\"movies-list_ratingWrapper__tRX2Z\",\"title\":\"movies-list_title__nyWWF\",\"release\":\"movies-list_release__xKjTi\"};","import {memo} from 'react';\r\nimport {Link, useLocation} from 'react-router-dom';\r\nimport {PropTypes} from 'prop-types';\r\n\r\nimport Grid from '../../shared/components/Grid';\r\nimport Rating from '../../shared/components/Rating';\r\n\r\nimport {formatDate} from '../../shared/utils/utils';\r\nimport defaultPoster from '../../shared/images/default-poster.png';\r\nimport styles from './movies-list.module.scss';\r\n\r\nconst MoviesList = ({items}) => {\r\n    const location = useLocation();\r\n    \r\n    return (\r\n        <Grid type=\"default\">\r\n            {\r\n                items.map(({id, title, poster_path, vote_average, release_date = null}) => {\r\n                    const date = formatDate(release_date);\r\n                    const poster = poster_path?.length > 0 ? `https://image.tmdb.org/t/p/w500${poster_path}` : defaultPoster;\r\n\r\n                    return (<div className={styles.item} key={id}>\r\n                                <div className={styles.wrapper}>\r\n                                    <Link className={styles.poster} state={{from: location}} to={`/movies/${id}`}>\r\n                                        <img className={styles.image} src={poster} alt=\"{title}\" />\r\n                                    </Link>\r\n                                    <div className={styles.meta}>\r\n                                        <div className={styles.ratingWrapper}><Rating vote={vote_average} /></div>\r\n                                        <Link state={{from: location}} to={`/movies/${id}`} className={styles.title}>{title}</Link>\r\n                                        {date && <p className={styles.release}>{date}</p>}\r\n                                    </div>\r\n                                </div>\r\n                            </div>);\r\n                })\r\n            }\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default memo(MoviesList);\r\n\r\nMoviesList.defaultProps = {\r\n    items: [],\r\n}\r\n\r\nMoviesList.propTypes = {\r\n    items: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number]).isRequired,\r\n        title: PropTypes.string.isRequired,\r\n    })).isRequired,\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"options-form_container__7r5we\",\"option\":\"options-form_option__5w1Ob\"};","import {memo, useCallback} from 'react';\r\n\r\nimport {PropTypes} from 'prop-types';\r\n\r\nimport styles from './options-form.module.scss';\r\n\r\nimport Container from '../../shared/components/Container';\r\n\r\nconst OptionsForm = ({onChange, option}) => {\r\n    const handleChange = useCallback(({target}) => {\r\n        onChange(target);\r\n    }, [onChange]);\r\n    \r\n    return (\r\n        <Container>\r\n            <div className={styles.container}>\r\n                <h1 className=\"title\">Trending Movies</h1>\r\n                <form>\r\n                    <label className={styles.option}>\r\n                        <input \r\n                            type=\"radio\" \r\n                            name=\"option\" \r\n                            value=\"day\" \r\n                            onChange={handleChange}\r\n                            checked={option === \"day\"}\r\n                        /> Today\r\n                    </label>\r\n                    <label className={styles.option}>\r\n                        <input \r\n                            type=\"radio\" \r\n                            name=\"option\"\r\n                            value=\"week\" \r\n                            onChange={handleChange}\r\n                            checked={option === \"week\"}\r\n                        /> This week\r\n                    </label>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default memo(OptionsForm);\r\n\r\nOptionsForm.propTypes = {\r\n    onChange: PropTypes.func.isRequired,\r\n    option: PropTypes.oneOf([\"day\", \"week\"]).isRequired,\r\n}","import {useState, useEffect} from 'react';\r\n\r\nimport OptionsForm from '../../modules/OptionsForm';\r\nimport MoviesList from '../../modules/MoviesList';\r\nimport Container from '../../shared/components/Container';\r\nimport Loading from '../../shared/components/Loading';\r\nimport Error from '../../shared/components/Error';\r\nimport ButtonCentered from '../../shared/components/ButtonCentered';\r\n\r\nimport {getTrendingMovies} from '../../shared/api/api';\r\n\r\n// import styles from './home-page.module.scss';\r\n\r\nconst HomePage = () => {\r\n    const [state, setState] = useState({\r\n        items: [],\r\n        page: 1,\r\n        loading: false,\r\n        error: null,\r\n    })\r\n\r\n    const [option, setOption] = useState(\"day\");\r\n\r\n    useEffect(() => {\r\n        const fetchMovies = async() => {\r\n            setState(prevState => ({\r\n                ...prevState, \r\n                loading: true,\r\n                error: null,\r\n            }));\r\n            try {\r\n                const data = await getTrendingMovies(option, state.page);\r\n                setState(prevState => ({\r\n                    ...prevState,\r\n                    items: [...prevState.items, ...data]\r\n                }));\r\n            }\r\n            catch (error) {\r\n                setState(prevState => ({\r\n                    ...prevState,\r\n                    error,\r\n                }));\r\n            } finally {\r\n                setState(prevState => ({\r\n                    ...prevState, \r\n                    loading: false \r\n                }));\r\n            }\r\n        }\r\n        fetchMovies();\r\n    }, [setState, option, state.page]);\r\n\r\n    const handleOptionChange = (target) => {\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            items: []\r\n        }));\r\n        setOption(target.value);\r\n    }\r\n    const handleShowMore = () => {\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            page: prevState.page + 1,\r\n        }));\r\n    }\r\n\r\n    const {items, loading, error} = state;\r\n    const isItems = items.length > 0;\r\n\r\n    return(\r\n        <>\r\n            <OptionsForm onChange={handleOptionChange} option={option} />\r\n            {isItems && <MoviesList items={items} onChange={handleOptionChange} />}\r\n            {loading && <Loading />}\r\n            {error && <Container><Error>Some error occurred</Error></Container>}\r\n            {isItems && !loading && <ButtonCentered onClick={handleShowMore}>Show more</ButtonCentered>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomePage;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://api.themoviedb.org/3',\r\n  params: {\r\n    api_key: 'fe6ebdaf9b26884ef65376bf9a48ed3e',\r\n  },\r\n});\r\n\r\nexport const getTrendingMovies = async (period = 'day', page = 1) => {\r\n  const { data } = await instance.get(`/trending/movie/${period}`, {\r\n    params: {\r\n      page,\r\n    },\r\n  });\r\n  console.log(data.results);\r\n  return data.results;\r\n};\r\n\r\nexport const getMovieById = async movie_id => {\r\n  const { data } = await instance.get(`/movie/${movie_id}`, {});\r\n  return data;\r\n};\r\n\r\nexport const getReviews = async movie_id => {\r\n  const { data } = await instance.get(`/movie/${movie_id}/reviews`, {});\r\n  return data.results;\r\n};\r\n\r\nexport const getCast = async movie_id => {\r\n  const { data } = await instance.get(`/movie/${movie_id}/credits`, {});\r\n  return data.cast;\r\n};\r\n\r\nexport const searchMovies = async (query, page = 1) => {\r\n  const { data } = await instance.get(`/search/movie`, {\r\n    params: {\r\n      query,\r\n      page,\r\n    },\r\n  });\r\n\r\n  return data;\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"button-centered_container__iWzUL\"};","import PropTypes from 'prop-types';\r\n\r\nimport Button from '../Button';\r\nimport Container from '../Container';\r\n\r\nimport styles from './button-centered.module.scss';\r\n\r\nconst CenteredButton = ({onClick = null, children}) => {\r\n    return (\r\n        <Container>\r\n            <div className={styles.container}>\r\n                <Button onClick={onClick}>{children}</Button>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CenteredButton;\r\n\r\nCenteredButton.propTypes = {\r\n    onClick: PropTypes.func,\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.element]).isRequired,\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"button_button__3W9eW\"};","import {memo} from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './button.module.scss';\r\n\r\nconst Button = ({onClick = null, type = \"button\", children}) => {\r\n    return (\r\n        <>\r\n            {Boolean(onClick) && <button className={styles.button} onClick={onClick} type={type}>{children}</button>}\r\n            {!Boolean(onClick) && <button className={styles.button} type={type}>{children}</button>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(Button);\r\n\r\nButton.propTypes = {\r\n    onClick: PropTypes.func,\r\n    type: PropTypes.oneOf([\"button\", \"submit\"]),\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.element]).isRequired,\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"error_wrapper__2MlH2\",\"message\":\"error_message__MqNnC\"};","import PropTypes from 'prop-types';\r\n\r\nimport styles from './error.module.scss';\r\n\r\nconst Error = ({children}) => {\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <p className={styles.message}>{children}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error;\r\n\r\nError.propTypes = {\r\n    children: PropTypes.string.isRequired,\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"gird\":\"grid_gird__3-zC+\",\"actors\":\"grid_actors__hEzPU\"};","import PropTypes from 'prop-types';\r\n\r\nimport Container from '../Container';\r\n\r\nimport styles from './grid.module.scss';\r\n\r\nconst Grid = ({type = \"default\", children}) => {\r\n    const getGridClassList = (type) => {\r\n        let list = \"\";\r\n        switch (type) {\r\n            case \"default\":\r\n                list = styles.gird;\r\n                break;\r\n            case \"actors\":\r\n                list = `${styles.gird} ${styles.actors}`;\r\n                break;\r\n            default:\r\n                list = styles.gird;\r\n        }\r\n        return list;\r\n    }\r\n\r\n    const classList = getGridClassList(type);\r\n    return (\r\n        <Container>\r\n            <div className={classList}>{children}</div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Grid;\r\n\r\nGrid.propTypes = {\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.element,\r\n        PropTypes.node]).isRequired,\r\n}","import {memo} from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './rating.module.scss';\r\n\r\nimport {getRatingPercentage, getProgressDiagramClasses} from '../../utils/utils';\r\n\r\nconst Rating = ({vote}) => {\r\n    const percentage = getRatingPercentage(vote);\r\n    const isRated = percentage > 0;\r\n    const radius = 9;\r\n    const dashArray = radius * Math.PI * 2;\r\n    const dashOffset = dashArray - (dashArray * percentage) / 100;\r\n    // console.log(`percentage: ${percentage}, isRated: ${isRated}, dashArray: ${dashArray}, dashOffset: ${dashOffset}`);\r\n    const progressDiagramClasses = getProgressDiagramClasses(percentage);\r\n\r\n    return (\r\n        <div className={styles.rating}>\r\n            <div className={styles.diagram}>\r\n                <svg  \r\n                    width=\"40\" \r\n                    height=\"40\" \r\n                    viewBox={`0 0 21 21`}\r\n                >\r\n                    <circle \r\n                        cx=\"10\" cy=\"10\" r={radius}\r\n                        strokeWidth=\"1px\" \r\n                        className={styles.circleBg}\r\n                    />\r\n                    <circle \r\n                        cx=\"10\" cy=\"10\" r={radius}\r\n                        strokeWidth=\"1px\" \r\n                        className={progressDiagramClasses}\r\n                        style={{\r\n                            strokeDasharray: dashArray,\r\n                            strokeDashoffset: dashOffset,\r\n                        }}\r\n                        transform='rotate(-90 10 10)'\r\n                    />\r\n                </svg>\r\n            </div>\r\n            <span className={styles.ratingNumber}>{isRated ? percentage : \"NR\"}</span>\r\n            {percentage > 0 && <span className={styles.percentSign}>%</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(Rating);\r\n\r\nRating.propTypes = {\r\n    vote: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number]).isRequired,\r\n}","import {format} from \"date-fns\";\r\n\r\nimport diagramStyles from '../../shared/components/Rating/rating.module.scss';\r\n\r\nexport const getRatingPercentage = (rawRating = 0) => {\r\n    return Math.round(rawRating * 10);\r\n}\r\n\r\nexport const formatDate = (date) => {\r\n    if (date === null || date === \"\"  || date === undefined) {\r\n        return undefined;\r\n    }\r\n    const formatDate = date + \"T12:00:00\";\r\n    return format(Date.parse(formatDate), 'MMM dd, yyyy');\r\n}\r\n\r\nexport const getProgressDiagramClasses = (rating) => {\r\n    let classList = diagramStyles.progress;\r\n    if (rating >= 70) {\r\n        classList = `${diagramStyles.progress} ${diagramStyles.high}`;\r\n    } else if (rating < 70 && rating >= 50) {\r\n        classList = `${diagramStyles.progress} ${diagramStyles.medium}`;\r\n    }\r\n    return classList;\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"rating\":\"rating_rating__H6yez\",\"diagram\":\"rating_diagram__Pq+lG\",\"circleBg\":\"rating_circleBg__4C3bb\",\"progress\":\"rating_progress__F7aBr\",\"medium\":\"rating_medium__R5zNJ\",\"high\":\"rating_high__hhkyj\",\"ratingNumber\":\"rating_ratingNumber__9VX9j\",\"percentSign\":\"rating_percentSign__o8eAG\"};"],"names":["MoviesList","items","location","useLocation","Grid","type","map","id","title","poster_path","vote_average","release_date","date","formatDate","poster","length","defaultPoster","className","styles","state","from","to","src","alt","Rating","vote","memo","defaultProps","OptionsForm","onChange","option","handleChange","useCallback","target","Container","name","value","checked","useState","page","loading","error","setState","setOption","useEffect","fetchMovies","prevState","getTrendingMovies","data","handleOptionChange","isItems","Loading","Error","ButtonCentered","onClick","instance","axios","baseURL","params","api_key","period","get","console","log","results","getMovieById","movie_id","getReviews","getCast","cast","searchMovies","query","children","Button","Boolean","classList","list","getGridClassList","percentage","getRatingPercentage","isRated","dashArray","Math","PI","dashOffset","progressDiagramClasses","getProgressDiagramClasses","width","height","viewBox","cx","cy","r","strokeWidth","style","strokeDasharray","strokeDashoffset","transform","rawRating","round","undefined","format","Date","parse","rating","diagramStyles"],"sourceRoot":""}