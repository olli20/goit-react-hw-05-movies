{"version":3,"file":"static/js/175.912eac6e.chunk.js","mappings":"2OAmEA,UA9DsB,WAClB,OAA0BA,EAAAA,EAAAA,UAAS,CAC/BC,MAAO,GACPC,SAAS,EACTC,MAAO,OAHX,eAAOC,EAAP,KAAcC,EAAd,KAMOC,GAAWC,EAAAA,EAAAA,MAAXD,SAEPE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAS,mCAAG,2FACdJ,GAAS,SAAAK,GAAS,yBACXA,GADW,IAEdR,SAAS,EACTC,MAAO,MAHO,IADJ,mBAOSQ,EAAAA,EAAAA,IAAQL,GAPjB,OAOJM,EAPI,OAQVP,GAAS,SAAAK,GACL,OAAO,kBACAA,GADP,IAEIT,MAAM,GAAD,eAAMS,EAAUT,QAAhB,OAA0BW,KAEtC,IAbS,gDAeVP,GAAS,SAAAK,GAAS,yBACXA,GADW,IAEdP,MAAK,MAFS,IAfR,yBAoBVE,GAAS,SAAAK,GACL,OAAO,kBACAA,GADP,IAEIR,SAAS,GAChB,IAxBS,4EAAH,qDA2BfO,GACH,GAAE,CAACH,EAASD,IAEb,IAEMQ,EAFUT,EAATH,MAEgBa,KAAI,YAA0C,IAAxCC,EAAuC,EAAvCA,GAAIC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,aAC9C,OACI,2BACI,uBAAIF,KACJ,0BAAK,gBAAKG,IAAG,yCAAoCD,GAAgBE,MAAM,MAAMC,IAAKL,OAClF,uCAAeC,OAHVF,EAMhB,IAED,OACI,4BACI,wCACA,wBACKF,MAIhB,C,sLC/DKS,E,OAAWC,EAAAA,OAAa,CAC1BC,QAAS,+BACTC,OAAQ,CACJC,QAAS,sCAIJC,EAAgB,mCAAG,sGACPL,EAASM,IAAI,uBAAwB,CAAC,GAD/B,uBACrBC,EADqB,EACrBA,KADqB,kBAIrBA,EAAKC,SAJgB,2CAAH,qDAOhBC,EAAY,mCAAG,WAAMC,GAAN,yFACHV,EAASM,IAAT,iBAAuBI,GAAY,CAAC,GADjC,uBACjBH,EADiB,EACjBA,KADiB,kBAGjBA,GAHiB,2CAAH,sDAMZI,EAAU,mCAAG,WAAMD,GAAN,yFACDV,EAASM,IAAT,iBAAuBI,EAAvB,YAA2C,CAAC,GAD3C,uBACfH,EADe,EACfA,KADe,kBAGfA,EAAKC,SAHU,2CAAH,sDAMVnB,EAAO,mCAAG,WAAMqB,GAAN,yFACEV,EAASM,IAAT,iBAAuBI,EAAvB,YAA2C,CAAC,GAD9C,uBACZH,EADY,EACZA,KADY,kBAGZA,EAAKjB,MAHO,2CAAH,sDAMPsB,EAAY,mCAAG,WAAMC,GAAN,8FAAaC,EAAb,+BAAoB,EAApB,SACHd,EAASM,IAAT,gBAA8B,CAC/CH,OAAQ,CACJU,MAAAA,EACAC,KAAAA,KAJgB,uBACjBP,EADiB,EACjBA,KADiB,kBAQjBA,EAAKC,SARY,2CAAH,qD","sources":["pages/MovieCastPage/MovieCastPage.jsx","shared/api/api.js"],"sourcesContent":["import {useState, useEffect} from 'react';\nimport {useParams} from 'react-router-dom';\n\nimport {getCast} from '../../shared/api/api';\n\nconst MovieCastPage = () => {\n    const [state, setState] = useState({\n        items: [],\n        loading: false,\n        error: null,\n    });\n\n    const {movieId} = useParams();\n\n    useEffect(() => {\n        const fetchCast = async() => {\n            setState(prevState => ({\n                ...prevState, \n                loading: true,\n                error: null,\n            }));\n            try {\n                const cast = await getCast(movieId);\n                setState(prevState => {\n                    return {\n                        ...prevState,\n                        items: [...prevState.items, ...cast]\n                    }\n                });\n            } catch (error) {\n                setState(prevState => ({\n                    ...prevState,\n                    error,\n                }));\n            } finally {\n                setState(prevState => {\n                    return {\n                        ...prevState, \n                        loading: false }\n                });\n            }\n        }\n        fetchCast();\n    }, [movieId, setState]) \n\n    const {items} = state;\n\n    const elements = items.map(({id, name, character, profile_path}) => {\n        return (\n            <li key={id}>\n                <p>{name}</p>\n                <div><img src={`https://image.tmdb.org/t/p/w500${profile_path}`} width=\"200\" alt={name} /></div>\n                <p>Character: {character}</p>\n            </li>\n        )\n    })\n\n    return(\n        <div>\n            <h3>Movie Cast</h3>\n            <ul>\n                {elements}\n            </ul>\n        </div>\n    )\n}\n\nexport default MovieCastPage;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n    params: {\n        api_key: \"280dfc47f55a5a95f0363880d2199c9a\",\n    }\n});\n\nexport const getPopularMovies = async() => {\n    const {data} = await instance.get(\"/trending/movie/week\", {\n    })\n\n    return data.results;\n}\n\nexport const getMovieById = async(movie_id) => {\n    const {data} = await instance.get(`/movie/${movie_id}`, {})\n\n    return data;\n}\n\nexport const getReviews = async(movie_id) => {\n    const {data} = await instance.get(`/movie/${movie_id}/reviews`, {})\n\n    return data.results;\n}\n\nexport const getCast = async(movie_id) => {\n    const {data} = await instance.get(`/movie/${movie_id}/credits`, {})\n\n    return data.cast;\n}\n\nexport const searchMovies = async(query, page = 1) => {\n    const {data} = await instance.get(`/search/movie`, {\n        params: {\n            query,\n            page,\n        }\n    })\n\n    return data.results;\n}"],"names":["useState","items","loading","error","state","setState","movieId","useParams","useEffect","fetchCast","prevState","getCast","cast","elements","map","id","name","character","profile_path","src","width","alt","instance","axios","baseURL","params","api_key","getPopularMovies","get","data","results","getMovieById","movie_id","getReviews","searchMovies","query","page"],"sourceRoot":""}