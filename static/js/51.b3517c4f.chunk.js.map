{"version":3,"file":"static/js/51.b3517c4f.chunk.js","mappings":"4PACA,EAA0B,+BAA1B,EAAkE,8B,SCuBlE,EAtBqB,SAAC,GAAY,IAAXA,EAAU,EAAVA,KACZC,EAA2DD,EAA3DC,MAAOC,EAAoDF,EAApDE,YAAaC,EAAuCH,EAAvCG,aAAcC,EAAyBJ,EAAzBI,SAAzC,EAAkEJ,EAAfK,OAAAA,OAAnD,MAA4D,GAA5D,EAEMC,EAAYD,EAAOE,KAAI,SAAAC,GAAK,OAAI,wBAAoBA,EAAMC,MAAjBD,EAAME,GAAnB,IAElC,OACI,iBAAKC,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,UACI,gBAAKC,IAAG,yCAAoCX,GAAeY,MAAM,MAAMC,IAAKd,OAEhF,4BACI,wBAAKA,KACL,wCAAgBe,KAAKC,MAAqB,GAAfd,GAA3B,QACA,sCACA,uBAAIC,KACJ,mCACCC,IAAU,uBAAIC,SAI9B,E,SCiDD,EA/DyB,WACrB,OAA0BY,EAAAA,EAAAA,UAAS,CAC/BlB,KAAM,CAAC,EACPmB,SAAS,EACTC,MAAO,OAHX,eAAOC,EAAP,KAAcC,EAAd,KAMOC,GAAWC,EAAAA,EAAAA,MAAXD,QAmCP,OAjCAE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAiB,mCAAG,2FACtBJ,GAAS,SAAAK,GAAS,yBACXA,GADW,IAEdR,SAAS,EACTC,MAAO,MAHO,IADI,mBAOCQ,EAAAA,EAAAA,IAAaL,GAPd,OAOZM,EAPY,OAQlBP,GAAS,SAAAK,GACL,OAAO,kBACAA,GADP,IAEI3B,KAAM6B,GAEb,IAbiB,gDAgBlBP,GAAS,SAAAK,GAAS,yBACXA,GADW,IAEdP,MAAK,MAFS,IAhBA,yBAsBlBE,GAAS,SAAAK,GACL,OAAO,kBACAA,GADP,IAEIR,SAAS,GAChB,IA1BiB,4EAAH,qDA6BvBO,GACH,GAAE,CAACH,EAASD,KAGT,iBAAKX,UAAU,YAAf,WACI,SAAC,EAAD,CAAcX,KAAMqB,EAAMrB,QAC1B,mBACA,mDACA,yBACI,yBACI,SAAC,KAAD,CAAM8B,GAAE,0CAAqCP,EAArC,SAAR,uBAGR,yBACI,yBACI,SAAC,KAAD,CAAMO,GAAE,0CAAqCP,EAArC,YAAR,0BAGR,SAAC,KAAD,MAIX,C,8JCnEKQ,E,OAAWC,EAAAA,OAAa,CAC1BC,QAAS,+BACTC,OAAQ,CACJC,QAAS,sCAIJC,EAAgB,mCAAG,sGACPL,EAASM,IAAI,uBAAwB,CAAC,GAD/B,uBACrBR,EADqB,EACrBA,KADqB,kBAIrBA,EAAKS,SAJgB,2CAAH,qDAOhBV,EAAY,mCAAG,WAAMW,GAAN,yFACHR,EAASM,IAAT,iBAAuBE,GAAY,CAAC,GADjC,uBACjBV,EADiB,EACjBA,KADiB,kBAGjBA,GAHiB,2CAAH,sDAMZW,EAAU,mCAAG,WAAMD,GAAN,yFACDR,EAASM,IAAT,iBAAuBE,EAAvB,YAA2C,CAAC,GAD3C,uBACfV,EADe,EACfA,KADe,kBAGfA,EAAKS,SAHU,2CAAH,sDAMVG,EAAO,mCAAG,WAAMF,GAAN,yFACER,EAASM,IAAT,iBAAuBE,EAAvB,YAA2C,CAAC,GAD9C,uBACZV,EADY,EACZA,KADY,kBAGZA,EAAKa,MAHO,2CAAH,qD","sources":["webpack://react-homework-template/./src/modules/MovieDetails/movie-details.module.scss?3a77","modules/MovieDetails/MovieDetails.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx","shared/api/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"movie-details_wrapper__os-VS\",\"poster\":\"movie-details_poster__ksvE2\"};","import styles from './movie-details.module.scss';\n\nconst MovieDetails = ({item}) => {\n    const {title, poster_path, vote_average, overview, genres = []} = item;\n    // const genreList = genres.map(genre => genre.name).join(\", \");\n    const genreList = genres.map(genre => <li key={genre.id}>{genre.name}</li>);\n\n    return (\n        <div className={styles.wrapper}>\n            <div className={styles.poster}>\n                <img src={`https://image.tmdb.org/t/p/w500${poster_path}`} width=\"200\" alt={title} />\n            </div>\n            <div>\n                <h2>{title}</h2>\n                <p>User Score: {Math.round(vote_average * 10)}%</p>\n                <h3>Overview</h3>\n                <p>{overview}</p>\n                <h3>Genres</h3>\n                {genres && <p>{genreList}</p>}\n            </div>\n        </div>\n    )\n}\n\nexport default MovieDetails;","import {useState, useEffect} from 'react';\nimport {Link, Outlet, useParams} from 'react-router-dom';\n\nimport MovieDetails from '../../modules/MovieDetails/MovieDetails';\n\nimport {getMovieById} from '../../shared/api/api';\n\n\nconst MovieDetailsPage = () => {\n    const [state, setState] = useState({\n        item: {},\n        loading: false,\n        error: null,\n    });\n\n    const {movieId} = useParams();\n\n    useEffect(() => {\n        const fetchMovieDetails = async() => {\n            setState(prevState => ({\n                ...prevState, \n                loading: true,\n                error: null,\n            }));\n            try {\n                const data = await getMovieById(movieId);\n                setState(prevState => {\n                    return {\n                        ...prevState,\n                        item: data,\n                    }\n                });\n            }\n            catch (error) {\n                setState(prevState => ({\n                    ...prevState,\n                    error,\n                }));\n            }\n            finally {\n                setState(prevState => {\n                    return {\n                        ...prevState, \n                        loading: false }\n                });\n            }\n        }\n        fetchMovieDetails();\n    }, [movieId, setState])\n\n    return(\n        <div className=\"container\">\n            <MovieDetails item={state.item} />\n            <hr />\n            <p>Additional information</p>\n            <ul>\n                <li>\n                    <Link to={`/goit-react-hw-05-movies/movies/${movieId}/cast`}>Cast</Link>\n                </li>\n            </ul>\n            <ul>\n                <li>\n                    <Link to={`/goit-react-hw-05-movies/movies/${movieId}/reviews`}>Reviews</Link>\n                </li>\n            </ul>\n            <Outlet />\n        </div>\n        \n    )\n}\n\nexport default MovieDetailsPage;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n    params: {\n        api_key: \"280dfc47f55a5a95f0363880d2199c9a\",\n    }\n});\n\nexport const getPopularMovies = async() => {\n    const {data} = await instance.get(\"/trending/movie/week\", {\n    })\n\n    return data.results;\n}\n\nexport const getMovieById = async(movie_id) => {\n    const {data} = await instance.get(`/movie/${movie_id}`, {})\n\n    return data;\n}\n\nexport const getReviews = async(movie_id) => {\n    const {data} = await instance.get(`/movie/${movie_id}/reviews`, {})\n\n    return data.results;\n}\n\nexport const getCast = async(movie_id) => {\n    const {data} = await instance.get(`/movie/${movie_id}/credits`, {})\n\n    return data.cast;\n}"],"names":["item","title","poster_path","vote_average","overview","genres","genreList","map","genre","name","id","className","styles","src","width","alt","Math","round","useState","loading","error","state","setState","movieId","useParams","useEffect","fetchMovieDetails","prevState","getMovieById","data","to","instance","axios","baseURL","params","api_key","getPopularMovies","get","results","movie_id","getReviews","getCast","cast"],"sourceRoot":""}