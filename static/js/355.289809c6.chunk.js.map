{"version":3,"file":"static/js/355.289809c6.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/modules/MoviesList/movies-list.module.scss?f232","modules/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/shared/components/ContainerFilled/container-filled.module.scss?5142","shared/components/ContainerFilled/ContainerFilled.jsx","webpack://react-homework-template/./src/modules/MoviesSearchForm/movies-search-form.module.scss?b736","modules/MoviesSearchForm/MoviesSearchForm.jsx","pages/MoviesSearchPage/MoviesSearchPage.jsx","shared/api/api.js","webpack://react-homework-template/./src/shared/components/ButtonCentered/button-centered.module.scss?58b1","shared/components/ButtonCentered/ButtonCentered.jsx","webpack://react-homework-template/./src/shared/components/Button/button.module.scss?9580","shared/components/Button/Button.jsx","webpack://react-homework-template/./src/shared/components/Error/error.module.scss?3b72","shared/components/Error/Error.jsx","webpack://react-homework-template/./src/shared/components/Grid/grid.module.scss?5271","shared/components/Grid/Grid.jsx","shared/components/Rating/Rating.jsx","shared/utils/utils.js","webpack://react-homework-template/./src/shared/components/Rating/rating.module.scss?02c3"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"movies-list_item__7NzBA\",\"wrapper\":\"movies-list_wrapper__wAiz1\",\"poster\":\"movies-list_poster__MUsPh\",\"image\":\"movies-list_image__Fltm5\",\"meta\":\"movies-list_meta__v1aL4\",\"ratingWrapper\":\"movies-list_ratingWrapper__tRX2Z\",\"title\":\"movies-list_title__nyWWF\",\"release\":\"movies-list_release__xKjTi\"};","import {memo} from 'react';\r\nimport {Link, useLocation} from 'react-router-dom';\r\nimport {PropTypes} from 'prop-types';\r\n\r\nimport Grid from '../../shared/components/Grid';\r\nimport Rating from '../../shared/components/Rating';\r\n\r\nimport {formatDate} from '../../shared/utils/utils';\r\nimport defaultPoster from '../../shared/images/default-poster.png';\r\nimport styles from './movies-list.module.scss';\r\n\r\nconst MoviesList = ({items}) => {\r\n    const location = useLocation();\r\n    \r\n    return (\r\n        <Grid type=\"default\">\r\n            {\r\n                items.map(({id, title, poster_path, vote_average, release_date = null}) => {\r\n                    const date = formatDate(release_date);\r\n                    const poster = poster_path?.length > 0 ? `https://image.tmdb.org/t/p/w500${poster_path}` : defaultPoster;\r\n\r\n                    return (<div className={styles.item} key={id}>\r\n                                <div className={styles.wrapper}>\r\n                                    <Link className={styles.poster} state={{from: location}} to={`/movies/${id}`}>\r\n                                        <img className={styles.image} src={poster} alt=\"{title}\" />\r\n                                    </Link>\r\n                                    <div className={styles.meta}>\r\n                                        <div className={styles.ratingWrapper}><Rating vote={vote_average} /></div>\r\n                                        <Link state={{from: location}} to={`/movies/${id}`} className={styles.title}>{title}</Link>\r\n                                        {date && <p className={styles.release}>{date}</p>}\r\n                                    </div>\r\n                                </div>\r\n                            </div>);\r\n                })\r\n            }\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default memo(MoviesList);\r\n\r\nMoviesList.defaultProps = {\r\n    items: [],\r\n}\r\n\r\nMoviesList.propTypes = {\r\n    items: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number]).isRequired,\r\n        title: PropTypes.string.isRequired,\r\n    })).isRequired,\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container-filled_container__gg9ke\"};","import PropTypes from 'prop-types';\r\n\r\nimport styles from './container-filled.module.scss';\r\n\r\nconst ContainerFilled = ({children}) => {\r\n    return (\r\n        <div className={styles.container}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContainerFilled;\r\n\r\nContainerFilled.propTypes = {\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.element,\r\n        PropTypes.node]).isRequired,\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"formBlock\":\"movies-search-form_formBlock__upDBW\",\"form\":\"movies-search-form_form__Gcyvd\",\"title\":\"movies-search-form_title__kp3aJ\",\"description\":\"movies-search-form_description__mUgdR\",\"input\":\"movies-search-form_input__re2is\",\"formButton\":\"movies-search-form_formButton__30XU7\"};","import {useState, memo} from 'react';\r\nimport {PropTypes} from 'prop-types';\r\n\r\nimport Button from '../../shared/components/Button';\r\nimport ContainerFilled from '../../shared/components/ContainerFilled';\r\n\r\nimport styles from './movies-search-form.module.scss';\r\n\r\nconst MoviesSearchForm = ({onSubmit}) => {\r\n    const [state, setState] = useState(\"\");\r\n \r\n    const handleChange = ({target}) => {\r\n        setState(target.value);\r\n    }\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        onSubmit(state);\r\n        setState(\"\");\r\n    }\r\n\r\n    return (\r\n        <ContainerFilled>\r\n            <div className={styles.formBlock}>\r\n                <h1 className={styles.title}>Explore.</h1>\r\n                <p className={styles.description}>Have you done your homework? Than it's time to discover.</p>\r\n                <form className={styles.form} onSubmit={handleSubmit}>\r\n                    <input \r\n                        name=\"query\"\r\n                        value={state}\r\n                        onChange={handleChange}\r\n                        placeholder=\"Search for a movie...\"\r\n                        required\r\n                        className={styles.input}\r\n                    />\r\n                    <div className={styles.formButton}>\r\n                        <Button type=\"submit\">Search</Button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </ContainerFilled>\r\n    )\r\n}\r\n\r\nexport default memo(MoviesSearchForm);\r\n\r\nMoviesSearchForm.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n} ","import {useState, useEffect, useCallback} from 'react';\r\nimport {useSearchParams} from 'react-router-dom';\r\n\r\nimport MoviesSearchForm from '../../modules/MoviesSearchForm';\r\nimport MoviesList from '../../modules/MoviesList';\r\nimport Loading from '../../shared/components/Loading';\r\nimport Error from '../../shared/components/Error';\r\nimport Container from '../../shared/components/Container';\r\nimport ButtonCentered from '../../shared/components/ButtonCentered';\r\n\r\nimport {searchMovies} from '../../shared/api/api';\r\n// import styles from './movies-search-page.scss';\r\n\r\nconst MoviesSearchPage = () => {\r\n    const [state, setState] = useState({\r\n        items: [],\r\n        page: 1,\r\n        loading: false,\r\n        error: null,\r\n    });\r\n\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n    const search = searchParams.get(\"search\");\r\n\r\n    useEffect(() => {\r\n        const fetchMovies = async() => {\r\n            try {\r\n                setState(prevState =>({\r\n                    ...prevState,\r\n                    loading: true,\r\n                }));\r\n                const data = await searchMovies(search, state.page);\r\n                    setState(prevState =>({\r\n                        ...prevState,\r\n                        items: [...prevState.items, ...data.results],\r\n                    }));\r\n            } catch (error) {\r\n                setState(prevState =>({\r\n                    ...prevState,\r\n                    error,\r\n                }));\r\n            } finally {\r\n                setState(prevState =>({\r\n                    ...prevState,\r\n                    loading: false,\r\n                }));\r\n            }\r\n        }\r\n        if(search) {\r\n            fetchMovies();\r\n        }\r\n    }, [search, state.page, setState])\r\n\r\n    const onSubmit = useCallback((search) => {\r\n        setSearchParams({search});\r\n        setState(prevState =>({\r\n            ...prevState,\r\n            items: [],\r\n            page: 1,\r\n            error: null,\r\n        }));\r\n    }, [setSearchParams]);\r\n\r\n    const handleShowMore = useCallback(() => {\r\n        setState(prevState =>({\r\n            ...prevState,\r\n            page: prevState.page + 1,\r\n        }));\r\n    }, [])\r\n\r\n    const {items, loading, error} = state;\r\n    const isItems = items.length > 0;\r\n\r\n    return (\r\n        <div>\r\n            <MoviesSearchForm onSubmit={onSubmit} />\r\n            {isItems && <MoviesList items={items} />}\r\n            {loading && <Loading />}\r\n            {error && <Container><Error>Some error occured</Error></Container>}\r\n            {isItems && !loading && <ButtonCentered onClick={handleShowMore}>Show more</ButtonCentered>}\r\n        </div>\r\n    )   \r\n}\r\n\r\nexport default MoviesSearchPage;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://api.themoviedb.org/3',\r\n  params: {\r\n    api_key: 'fe6ebdaf9b26884ef65376bf9a48ed3e',\r\n  },\r\n});\r\n\r\nexport const getTrendingMovies = async (period = 'day', page = 1) => {\r\n  const { data } = await instance.get(`/trending/movie/${period}`, {\r\n    params: {\r\n      page,\r\n    },\r\n  });\r\n  console.log(data.results);\r\n  return data.results;\r\n};\r\n\r\nexport const getMovieById = async movie_id => {\r\n  const { data } = await instance.get(`/movie/${movie_id}`, {});\r\n  return data;\r\n};\r\n\r\nexport const getReviews = async movie_id => {\r\n  const { data } = await instance.get(`/movie/${movie_id}/reviews`, {});\r\n  return data.results;\r\n};\r\n\r\nexport const getCast = async movie_id => {\r\n  const { data } = await instance.get(`/movie/${movie_id}/credits`, {});\r\n  return data.cast;\r\n};\r\n\r\nexport const searchMovies = async (query, page = 1) => {\r\n  const { data } = await instance.get(`/search/movie`, {\r\n    params: {\r\n      query,\r\n      page,\r\n    },\r\n  });\r\n\r\n  return data;\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"button-centered_container__iWzUL\"};","import PropTypes from 'prop-types';\r\n\r\nimport Button from '../Button';\r\nimport Container from '../Container';\r\n\r\nimport styles from './button-centered.module.scss';\r\n\r\nconst CenteredButton = ({onClick = null, children}) => {\r\n    return (\r\n        <Container>\r\n            <div className={styles.container}>\r\n                <Button onClick={onClick}>{children}</Button>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CenteredButton;\r\n\r\nCenteredButton.propTypes = {\r\n    onClick: PropTypes.func,\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.element]).isRequired,\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"button_button__3W9eW\"};","import {memo} from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './button.module.scss';\r\n\r\nconst Button = ({onClick = null, type = \"button\", children}) => {\r\n    return (\r\n        <>\r\n            {Boolean(onClick) && <button className={styles.button} onClick={onClick} type={type}>{children}</button>}\r\n            {!Boolean(onClick) && <button className={styles.button} type={type}>{children}</button>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(Button);\r\n\r\nButton.propTypes = {\r\n    onClick: PropTypes.func,\r\n    type: PropTypes.oneOf([\"button\", \"submit\"]),\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.element]).isRequired,\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"error_wrapper__2MlH2\",\"message\":\"error_message__MqNnC\"};","import PropTypes from 'prop-types';\r\n\r\nimport styles from './error.module.scss';\r\n\r\nconst Error = ({children}) => {\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <p className={styles.message}>{children}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error;\r\n\r\nError.propTypes = {\r\n    children: PropTypes.string.isRequired,\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"gird\":\"grid_gird__3-zC+\",\"actors\":\"grid_actors__hEzPU\"};","import PropTypes from 'prop-types';\r\n\r\nimport Container from '../Container';\r\n\r\nimport styles from './grid.module.scss';\r\n\r\nconst Grid = ({type = \"default\", children}) => {\r\n    const getGridClassList = (type) => {\r\n        let list = \"\";\r\n        switch (type) {\r\n            case \"default\":\r\n                list = styles.gird;\r\n                break;\r\n            case \"actors\":\r\n                list = `${styles.gird} ${styles.actors}`;\r\n                break;\r\n            default:\r\n                list = styles.gird;\r\n        }\r\n        return list;\r\n    }\r\n\r\n    const classList = getGridClassList(type);\r\n    return (\r\n        <Container>\r\n            <div className={classList}>{children}</div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Grid;\r\n\r\nGrid.propTypes = {\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.element,\r\n        PropTypes.node]).isRequired,\r\n}","import {memo} from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './rating.module.scss';\r\n\r\nimport {getRatingPercentage, getProgressDiagramClasses} from '../../utils/utils';\r\n\r\nconst Rating = ({vote}) => {\r\n    const percentage = getRatingPercentage(vote);\r\n    const isRated = percentage > 0;\r\n    const radius = 9;\r\n    const dashArray = radius * Math.PI * 2;\r\n    const dashOffset = dashArray - (dashArray * percentage) / 100;\r\n    // console.log(`percentage: ${percentage}, isRated: ${isRated}, dashArray: ${dashArray}, dashOffset: ${dashOffset}`);\r\n    const progressDiagramClasses = getProgressDiagramClasses(percentage);\r\n\r\n    return (\r\n        <div className={styles.rating}>\r\n            <div className={styles.diagram}>\r\n                <svg  \r\n                    width=\"40\" \r\n                    height=\"40\" \r\n                    viewBox={`0 0 21 21`}\r\n                >\r\n                    <circle \r\n                        cx=\"10\" cy=\"10\" r={radius}\r\n                        strokeWidth=\"1px\" \r\n                        className={styles.circleBg}\r\n                    />\r\n                    <circle \r\n                        cx=\"10\" cy=\"10\" r={radius}\r\n                        strokeWidth=\"1px\" \r\n                        className={progressDiagramClasses}\r\n                        style={{\r\n                            strokeDasharray: dashArray,\r\n                            strokeDashoffset: dashOffset,\r\n                        }}\r\n                        transform='rotate(-90 10 10)'\r\n                    />\r\n                </svg>\r\n            </div>\r\n            <span className={styles.ratingNumber}>{isRated ? percentage : \"NR\"}</span>\r\n            {percentage > 0 && <span className={styles.percentSign}>%</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(Rating);\r\n\r\nRating.propTypes = {\r\n    vote: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number]).isRequired,\r\n}","import {format} from \"date-fns\";\r\n\r\nimport diagramStyles from '../../shared/components/Rating/rating.module.scss';\r\n\r\nexport const getRatingPercentage = (rawRating = 0) => {\r\n    return Math.round(rawRating * 10);\r\n}\r\n\r\nexport const formatDate = (date) => {\r\n    if (date === null || date === \"\"  || date === undefined) {\r\n        return undefined;\r\n    }\r\n    const formatDate = date + \"T12:00:00\";\r\n    return format(Date.parse(formatDate), 'MMM dd, yyyy');\r\n}\r\n\r\nexport const getProgressDiagramClasses = (rating) => {\r\n    let classList = diagramStyles.progress;\r\n    if (rating >= 70) {\r\n        classList = `${diagramStyles.progress} ${diagramStyles.high}`;\r\n    } else if (rating < 70 && rating >= 50) {\r\n        classList = `${diagramStyles.progress} ${diagramStyles.medium}`;\r\n    }\r\n    return classList;\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"rating\":\"rating_rating__H6yez\",\"diagram\":\"rating_diagram__Pq+lG\",\"circleBg\":\"rating_circleBg__4C3bb\",\"progress\":\"rating_progress__F7aBr\",\"medium\":\"rating_medium__R5zNJ\",\"high\":\"rating_high__hhkyj\",\"ratingNumber\":\"rating_ratingNumber__9VX9j\",\"percentSign\":\"rating_percentSign__o8eAG\"};"],"names":["MoviesList","items","location","useLocation","Grid","type","map","id","title","poster_path","vote_average","release_date","date","formatDate","poster","length","defaultPoster","className","styles","state","from","to","src","alt","Rating","vote","memo","defaultProps","children","MoviesSearchForm","onSubmit","useState","setState","event","preventDefault","name","value","onChange","target","placeholder","required","Button","page","loading","error","useSearchParams","searchParams","setSearchParams","search","get","useEffect","fetchMovies","prevState","searchMovies","data","results","useCallback","handleShowMore","isItems","Loading","Container","Error","ButtonCentered","onClick","instance","axios","baseURL","params","api_key","getTrendingMovies","period","console","log","getMovieById","movie_id","getReviews","getCast","cast","query","Boolean","classList","list","getGridClassList","percentage","getRatingPercentage","isRated","dashArray","Math","PI","dashOffset","progressDiagramClasses","getProgressDiagramClasses","width","height","viewBox","cx","cy","r","strokeWidth","style","strokeDasharray","strokeDashoffset","transform","rawRating","round","undefined","format","Date","parse","rating","diagramStyles"],"sourceRoot":""}