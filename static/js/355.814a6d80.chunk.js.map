{"version":3,"file":"static/js/355.814a6d80.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/modules/MoviesList/movies-list.module.scss?f232","modules/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/shared/components/ContainerFilled/container-filled.module.scss?5142","shared/components/ContainerFilled/ContainerFilled.jsx","webpack://react-homework-template/./src/modules/MoviesSearchForm/movies-search-form.module.scss?b736","modules/MoviesSearchForm/MoviesSearchForm.jsx","pages/MoviesSearchPage/MoviesSearchPage.jsx","shared/api/api.js","webpack://react-homework-template/./src/shared/components/Button/button.module.scss?9580","shared/components/Button/Button.jsx","webpack://react-homework-template/./src/shared/components/ButtonCentered/button-centered.module.scss?58b1","shared/components/ButtonCentered/ButtonCentered.jsx","webpack://react-homework-template/./src/shared/components/Error/error.module.scss?3b72","shared/components/Error/Error.jsx","webpack://react-homework-template/./src/shared/components/Grid/grid.module.scss?5271","shared/components/Grid/Grid.jsx","shared/components/Rating/Rating.jsx","shared/utils/utils.js","webpack://react-homework-template/./src/shared/components/Rating/rating.module.scss?02c3"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"movies-list_item__pgu-A\",\"wrapper\":\"movies-list_wrapper__t8PpM\",\"poster\":\"movies-list_poster__7scci\",\"image\":\"movies-list_image__-Uzre\",\"meta\":\"movies-list_meta__46nNy\",\"ratingWrapper\":\"movies-list_ratingWrapper__R59nG\",\"title\":\"movies-list_title__DOqi4\",\"release\":\"movies-list_release__j11oL\"};","import {memo} from 'react';\nimport {Link, useLocation} from 'react-router-dom';\nimport {PropTypes} from 'prop-types';\n\nimport Grid from '../../shared/components/Grid';\nimport Rating from '../../shared/components/Rating';\n\nimport {formatDate} from '../../shared/utils/utils';\nimport defaultPoster from '../../shared/images/default-poster.png';\nimport styles from './movies-list.module.scss';\n\nconst MoviesList = ({items}) => {\n    const location = useLocation();\n    \n    return (\n        <Grid type=\"default\">\n            {\n                items.map(({id, title, poster_path, vote_average, release_date = null}) => {\n                    const date = formatDate(release_date);\n                    const poster = poster_path?.length > 0 ? `https://image.tmdb.org/t/p/w500${poster_path}` : defaultPoster;\n\n                    return (<div className={styles.item} key={id}>\n                                <div className={styles.wrapper}>\n                                    <Link className={styles.poster} state={{from: location}} to={`/goit-react-hw-05-movies/movies/${id}`}>\n                                        <img className={styles.image} src={poster} alt=\"{title}\" />\n                                    </Link>\n                                    <div className={styles.meta}>\n                                        <div className={styles.ratingWrapper}><Rating vote={vote_average} /></div>\n                                        <Link state={{from: location}} to={`/goit-react-hw-05-movies/movies/${id}`} className={styles.title}>{title}</Link>\n                                        {date && <p className={styles.release}>{date}</p>}\n                                    </div>\n                                </div>\n                            </div>);\n                })\n            }\n        </Grid>\n    )\n}\n\nexport default memo(MoviesList);\n\nMoviesList.defaultProps = {\n    items: [],\n}\n\nMoviesList.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.number]).isRequired,\n        title: PropTypes.string.isRequired,\n    })).isRequired,\n}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container-filled_container__YJTUG\"};","import PropTypes from 'prop-types';\n\nimport styles from './container-filled.module.scss';\n\nconst ContainerFilled = ({children}) => {\n    return (\n        <div className={styles.container}>\n            {children}\n        </div>\n    )\n}\n\nexport default ContainerFilled;\n\nContainerFilled.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.element,\n        PropTypes.node]).isRequired,\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"formBlock\":\"movies-search-form_formBlock__QWbhe\",\"form\":\"movies-search-form_form__vEp0i\",\"title\":\"movies-search-form_title__zePKe\",\"description\":\"movies-search-form_description__cCJR8\",\"input\":\"movies-search-form_input__T0UhV\",\"formButton\":\"movies-search-form_formButton__F41-V\"};","import {useState, memo} from 'react';\nimport {PropTypes} from 'prop-types';\n\nimport Button from '../../shared/components/Button';\nimport ContainerFilled from '../../shared/components/ContainerFilled';\n\nimport styles from './movies-search-form.module.scss';\n\nconst MoviesSearchForm = ({onSubmit}) => {\n    const [state, setState] = useState(\"\");\n \n    const handleChange = ({target}) => {\n        setState(target.value);\n    }\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        onSubmit(state);\n        setState(\"\");\n    }\n\n    return (\n        <ContainerFilled>\n            <div className={styles.formBlock}>\n                <h1 className={styles.title}>Explore.</h1>\n                <p className={styles.description}>Have you done your homework? Than it's time to discover.</p>\n                <form className={styles.form} onSubmit={handleSubmit}>\n                    <input \n                        name=\"query\"\n                        value={state}\n                        onChange={handleChange}\n                        placeholder=\"Search for a movie...\"\n                        required\n                        className={styles.input}\n                    />\n                    <div className={styles.formButton}>\n                        <Button type=\"submit\">Search</Button>\n                    </div>\n                </form>\n            </div>\n        </ContainerFilled>\n    )\n}\n\nexport default memo(MoviesSearchForm);\n\nMoviesSearchForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n} ","import {useState, useEffect, useCallback} from 'react';\nimport {useSearchParams} from 'react-router-dom';\n\nimport MoviesSearchForm from '../../modules/MoviesSearchForm';\nimport MoviesList from '../../modules/MoviesList';\nimport Loading from '../../shared/components/Loading';\nimport Error from '../../shared/components/Error';\nimport Container from '../../shared/components/Container';\nimport ButtonCentered from '../../shared/components/ButtonCentered';\n\nimport {searchMovies} from '../../shared/api/api';\n// import styles from './movies-search-page.scss';\n\nconst MoviesSearchPage = () => {\n    const [state, setState] = useState({\n        items: [],\n        page: 1,\n        loading: false,\n        error: null,\n    });\n\n    const [searchParams, setSearchParams] = useSearchParams();\n    const search = searchParams.get(\"search\");\n\n    useEffect(() => {\n        const fetchMovies = async() => {\n            try {\n                setState(prevState =>({\n                    ...prevState,\n                    loading: true,\n                }));\n                const data = await searchMovies(search, state.page);\n                    setState(prevState =>({\n                        ...prevState,\n                        items: [...prevState.items, ...data.results],\n                    }));\n            } catch (error) {\n                setState(prevState =>({\n                    ...prevState,\n                    error,\n                }));\n            } finally {\n                setState(prevState =>({\n                    ...prevState,\n                    loading: false,\n                }));\n            }\n        }\n        if(search) {\n            fetchMovies();\n        }\n    }, [search, state.page, state.totalPages, setState])\n\n    const onSubmit = useCallback((search) => {\n        setSearchParams({search});\n        setState(prevState =>({\n            ...prevState,\n            items: [],\n            page: 1,\n            error: null,\n        }));\n    }, [setSearchParams]);\n\n    const handleShowMore = useCallback(() => {\n        setState(prevState =>({\n            ...prevState,\n            page: prevState.page + 1,\n        }));\n    }, [])\n\n    const {items, loading, error} = state;\n    const isItems = items.length > 0;\n\n    return(\n        <div>\n            <MoviesSearchForm onSubmit={onSubmit} />\n            {isItems && <MoviesList items={items} />}\n            {loading && <Loading />}\n            {error && <Container><Error>Some error occured</Error></Container>}\n            {isItems && !loading && <ButtonCentered onClick={handleShowMore}>Show more</ButtonCentered>}\n        </div>\n    )   \n}\n\nexport default MoviesSearchPage;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n    params: {\n        api_key: \"280dfc47f55a5a95f0363880d2199c9a\",\n    }\n});\n\nexport const getTrendingMovies = async(period = \"day\", page = 1) => {\n    const {data} = await instance.get(`/trending/movie/${period}`, {\n        params: {\n            page,\n        }\n    })\n\n    return data.results;\n}\n\nexport const getMovieById = async(movie_id) => {\n    const {data} = await instance.get(`/movie/${movie_id}`, {})\n    return data;\n}\n\nexport const getReviews = async(movie_id) => {\n    const {data} = await instance.get(`/movie/${movie_id}/reviews`, {})\n    return data.results;\n}\n\nexport const getCast = async(movie_id) => {\n    const {data} = await instance.get(`/movie/${movie_id}/credits`, {})\n    return data.cast;\n}\n\nexport const searchMovies = async(query, page = 1) => {\n    const {data} = await instance.get(`/search/movie`, {\n        params: {\n            query,\n            page,\n        }\n    })\n\n    return data;\n}","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"button_button__vTaVn\"};","import {memo} from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport styles from './button.module.scss';\n\nconst Button = ({onClick = null, type = \"button\", children}) => {\n    return (\n        <>\n            {Boolean(onClick) && <button className={styles.button} onClick={onClick} type={type}>{children}</button>}\n            {!Boolean(onClick) && <button className={styles.button} type={type}>{children}</button>}\n        </>\n    )\n}\n\nexport default memo(Button);\n\nButton.propTypes = {\n    onClick: PropTypes.func,\n    type: PropTypes.oneOf([\"button\", \"submit\"]),\n    children: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.element]).isRequired,\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"button-centered_container__a-JM5\"};","import PropTypes from 'prop-types';\n\nimport Button from '../Button';\nimport Container from '../Container';\n\nimport styles from './button-centered.module.scss';\n\nconst CenteredButton = ({onClick = null, children}) => {\n    return (\n        <Container>\n            <div className={styles.container}>\n                <Button onClick={onClick}>{children}</Button>\n            </div>\n        </Container>\n    )\n}\n\nexport default CenteredButton;\n\nCenteredButton.propTypes = {\n    onClick: PropTypes.func,\n    children: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.element]).isRequired,\n}","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"error_wrapper__-2+js\",\"message\":\"error_message__rY-IE\"};","import PropTypes from 'prop-types';\n\nimport styles from './error.module.scss';\n\nconst Error = ({children}) => {\n    return (\n        <div className={styles.wrapper}>\n            <p className={styles.message}>{children}</p>\n        </div>\n    )\n}\n\nexport default Error;\n\nError.propTypes = {\n    children: PropTypes.string.isRequired,\n}","// extracted by mini-css-extract-plugin\nexport default {\"gird\":\"grid_gird__sWAvm\",\"actors\":\"grid_actors__lImlA\"};","import PropTypes from 'prop-types';\n\nimport Container from '../Container';\n\nimport styles from './grid.module.scss';\n\nconst Grid = ({type = \"default\", children}) => {\n    const getGridClassList = (type) => {\n        let list = \"\";\n        switch (type) {\n            case \"default\":\n                list = styles.gird;\n                break;\n            case \"actors\":\n                list = `${styles.gird} ${styles.actors}`;\n                break;\n            default:\n                list = styles.gird;\n        }\n        return list;\n    }\n\n    const classList = getGridClassList(type);\n    return (\n        <Container>\n            <div className={classList}>{children}</div>\n        </Container>\n    )\n}\n\nexport default Grid;\n\nGrid.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.element,\n        PropTypes.node]).isRequired,\n}","import {memo} from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport styles from './rating.module.scss';\n\nimport {getRatingPercentage, getProgressDiagramClasses} from '../../utils/utils';\n\nconst Rating = ({vote}) => {\n    const percentage = getRatingPercentage(vote);\n    const isRated = percentage > 0;\n    const radius = 9;\n    const dashArray = radius * Math.PI * 2;\n    const dashOffset = dashArray - (dashArray * percentage) / 100;\n    // console.log(`percentage: ${percentage}, isRated: ${isRated}, dashArray: ${dashArray}, dashOffset: ${dashOffset}`);\n    const progressDiagramClasses = getProgressDiagramClasses(percentage);\n\n    return (\n        <div className={styles.rating}>\n            <div className={styles.diagram}>\n                <svg  \n                    width=\"40\" \n                    height=\"40\" \n                    viewBox={`0 0 21 21`}\n                >\n                    <circle \n                        cx=\"10\" cy=\"10\" r={radius}\n                        strokeWidth=\"1px\" \n                        className={styles.circleBg}\n                    />\n                    <circle \n                        cx=\"10\" cy=\"10\" r={radius}\n                        strokeWidth=\"1px\" \n                        className={progressDiagramClasses}\n                        style={{\n                            strokeDasharray: dashArray,\n                            strokeDashoffset: dashOffset,\n                        }}\n                        transform='rotate(-90 10 10)'\n                    />\n                </svg>\n            </div>\n            <span className={styles.ratingNumber}>{isRated ? percentage : \"NR\"}</span>\n            {percentage > 0 && <span className={styles.percentSign}>%</span>}\n        </div>\n    )\n}\n\nexport default memo(Rating);\n\nRating.propTypes = {\n    vote: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number]).isRequired,\n}","import {format} from \"date-fns\";\n\nimport diagramStyles from '../../shared/components/Rating/rating.module.scss';\n\nexport const getRatingPercentage = (rawRating = 0) => {\n    return Math.round(rawRating * 10);\n}\n\nexport const formatDate = (date) => {\n    if (date === null || date === \"\"  || date === undefined) {\n        return undefined;\n    }\n    const formatDate = date + \"T12:00:00\";\n    return format(Date.parse(formatDate), 'MMM dd, yyyy');\n}\n\nexport const getProgressDiagramClasses = (rating) => {\n    let classList = diagramStyles.progress;\n    if (rating >= 70) {\n        classList = `${diagramStyles.progress} ${diagramStyles.high}`;\n    } else if (rating < 70 && rating >= 50) {\n        classList = `${diagramStyles.progress} ${diagramStyles.medium}`;\n    }\n    return classList;\n}","// extracted by mini-css-extract-plugin\nexport default {\"rating\":\"rating_rating__hlgi+\",\"diagram\":\"rating_diagram__x-RaL\",\"circleBg\":\"rating_circleBg__qW11Z\",\"progress\":\"rating_progress__4Z1eL\",\"medium\":\"rating_medium__3UupM\",\"high\":\"rating_high__wws4H\",\"ratingNumber\":\"rating_ratingNumber__cBuLE\",\"percentSign\":\"rating_percentSign__oLwcY\"};"],"names":["MoviesList","items","location","useLocation","Grid","type","map","id","title","poster_path","vote_average","release_date","date","formatDate","poster","length","defaultPoster","className","styles","state","from","to","src","alt","Rating","vote","memo","defaultProps","children","MoviesSearchForm","onSubmit","useState","setState","event","preventDefault","name","value","onChange","target","placeholder","required","Button","page","loading","error","useSearchParams","searchParams","setSearchParams","search","get","useEffect","fetchMovies","prevState","searchMovies","data","results","totalPages","useCallback","handleShowMore","isItems","Loading","Container","Error","ButtonCentered","onClick","instance","axios","baseURL","params","api_key","getTrendingMovies","period","getMovieById","movie_id","getReviews","getCast","cast","query","Boolean","classList","list","getGridClassList","percentage","getRatingPercentage","isRated","dashArray","Math","PI","dashOffset","progressDiagramClasses","getProgressDiagramClasses","width","height","viewBox","cx","cy","r","strokeWidth","style","strokeDasharray","strokeDashoffset","transform","rawRating","round","undefined","format","Date","parse","rating","diagramStyles"],"sourceRoot":""}