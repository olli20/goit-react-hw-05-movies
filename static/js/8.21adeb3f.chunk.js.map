{"version":3,"file":"static/js/8.21adeb3f.chunk.js","mappings":"2PAqEA,UA5DyB,WACrB,OAA0BA,EAAAA,EAAAA,UAAS,CAC/BC,MAAO,GACPC,SAAS,EACTC,MAAO,OAHX,eAAOC,EAAP,KAAcC,EAAd,KAMOC,GAAWC,EAAAA,EAAAA,MAAXD,SAEPE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAY,mCAAG,2FACjBJ,GAAS,SAAAK,GAAS,yBACXA,GADW,IAEdR,SAAS,EACTC,MAAO,MAHO,IADD,mBAOMQ,EAAAA,EAAAA,IAAWL,GAPjB,OAOPM,EAPO,OAQbP,GAAS,SAAAK,GACL,OAAO,kBACAA,GADP,IAEIT,MAAM,GAAD,eAAMS,EAAUT,QAAhB,OAA0BW,KAEtC,IAbY,gDAebP,GAAS,SAAAK,GAAS,yBACXA,GADW,IAEdP,MAAK,MAFS,IAfL,yBAoBbE,GAAS,SAAAK,GACL,OAAO,kBACAA,GADP,IAEIR,SAAS,GAChB,IAxBY,4EAAH,qDA2BlBO,GACH,GAAE,CAACH,EAASD,IAEb,IAAOJ,EAAyBG,EAAzBH,MAAOC,EAAkBE,EAAlBF,QAASC,EAASC,EAATD,MAEjBU,EAAWZ,EAAMa,KAAI,SAACC,GACxB,OAAQ,2BACI,oCAAYA,EAAKC,WACjB,uBAAID,EAAKE,YAFJF,EAAKG,GAIrB,IAGL,OACI,2BACKhB,IAAW,SAAC,IAAD,IACXC,IAAS,iCACTF,EAAMkB,OAAS,IAAK,wBAAKN,KACxBX,GAA4B,IAAjBD,EAAMkB,SAAgB,uEAG9C,C,wLCjEKC,E,QAAWC,EAAAA,OAAa,CAC1BC,QAAS,+BACTC,OAAQ,CACJC,QAAS,sCAIJC,EAAiB,mCAAG,6GAAMC,EAAN,+BAAe,MAAOC,EAAtB,+BAA6B,EAA7B,SACRP,EAASQ,IAAT,0BAAgCF,GAAU,CAC3DH,OAAQ,CACJI,KAAAA,KAHqB,uBACtBf,EADsB,EACtBA,KADsB,kBAOtBA,EAAKiB,SAPiB,2CAAH,qDAUjBC,EAAY,mCAAG,WAAMC,GAAN,yFACHX,EAASQ,IAAT,iBAAuBG,GAAY,CAAC,GADjC,uBACjBnB,EADiB,EACjBA,KADiB,kBAEjBA,GAFiB,2CAAH,sDAKZD,EAAU,mCAAG,WAAMoB,GAAN,yFACDX,EAASQ,IAAT,iBAAuBG,EAAvB,YAA2C,CAAC,GAD3C,uBACfnB,EADe,EACfA,KADe,kBAEfA,EAAKiB,SAFU,2CAAH,sDAKVG,EAAO,mCAAG,WAAMD,GAAN,yFACEX,EAASQ,IAAT,iBAAuBG,EAAvB,YAA2C,CAAC,GAD9C,uBACZnB,EADY,EACZA,KADY,kBAEZA,EAAKqB,MAFO,2CAAH,sDAKPC,EAAY,mCAAG,WAAMC,GAAN,8FAAaR,EAAb,+BAAoB,EAApB,SACHP,EAASQ,IAAT,gBAA8B,CAC/CL,OAAQ,CACJY,MAAAA,EACAR,KAAAA,KAJgB,uBACjBf,EADiB,EACjBA,KADiB,kBAQjBA,EAAKiB,SARY,2CAAH,qD","sources":["pages/MovieReviewsPage/MovieReviewsPage.jsx","shared/api/api.js"],"sourcesContent":["import {useState, useEffect} from 'react';\nimport {useParams} from 'react-router-dom';\n\nimport {getReviews} from '../../shared/api/api';\n\nimport Loading from '../../shared/components/Loading';\n\n// import styles from './movie-reviews-page.module.scss';\n\nconst MovieReviewsPage = () => {\n    const [state, setState] = useState({\n        items: [],\n        loading: false,\n        error: null,\n    });\n\n    const {movieId} = useParams();\n\n    useEffect(() => {\n        const fetchReviews = async() => {\n            setState(prevState => ({\n                ...prevState, \n                loading: true,\n                error: null,\n            }));\n            try {\n                const data = await getReviews(movieId);\n                setState(prevState => {\n                    return {\n                        ...prevState,\n                        items: [...prevState.items, ...data]\n                    }\n                });\n            } catch (error) {\n                setState(prevState => ({\n                    ...prevState,\n                    error,\n                }));\n            } finally {\n                setState(prevState => {\n                    return {\n                        ...prevState, \n                        loading: false }\n                });\n            }\n        }\n        fetchReviews();\n    }, [movieId, setState]) \n\n    const {items, loading, error} = state;\n\n    const elements = items.map((item) => {\n        return (<li key={item.id}>\n                    <p>Author: {item.author}</p>\n                    <p>{item.content}</p>  \n                </li>)\n        }\n    );\n\n    return (\n        <div>\n            {loading && <Loading />}\n            {error && <p>Error</p>}\n            {items.length > 0 && <ul>{elements}</ul>}\n            {!loading && items.length === 0 && <p>We don't have any reviews for this movie.</p>}\n        </div>\n    )\n}\n\nexport default MovieReviewsPage;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n    params: {\n        api_key: \"280dfc47f55a5a95f0363880d2199c9a\",\n    }\n});\n\nexport const getTrendingMovies = async(period = \"day\", page = 1) => {\n    const {data} = await instance.get(`/trending/movie/${period}`, {\n        params: {\n            page,\n        }\n    })\n\n    return data.results;\n}\n\nexport const getMovieById = async(movie_id) => {\n    const {data} = await instance.get(`/movie/${movie_id}`, {})\n    return data;\n}\n\nexport const getReviews = async(movie_id) => {\n    const {data} = await instance.get(`/movie/${movie_id}/reviews`, {})\n    return data.results;\n}\n\nexport const getCast = async(movie_id) => {\n    const {data} = await instance.get(`/movie/${movie_id}/credits`, {})\n    return data.cast;\n}\n\nexport const searchMovies = async(query, page = 1) => {\n    const {data} = await instance.get(`/search/movie`, {\n        params: {\n            query,\n            page,\n        }\n    })\n\n    return data.results;\n}"],"names":["useState","items","loading","error","state","setState","movieId","useParams","useEffect","fetchReviews","prevState","getReviews","data","elements","map","item","author","content","id","length","instance","axios","baseURL","params","api_key","getTrendingMovies","period","page","get","results","getMovieById","movie_id","getCast","cast","searchMovies","query"],"sourceRoot":""}