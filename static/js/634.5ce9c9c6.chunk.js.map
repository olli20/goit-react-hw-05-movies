{"version":3,"file":"static/js/634.5ce9c9c6.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/shared/components/MoviesGrid/movies-grid.module.scss?df0c","shared/components/MoviesGrid/MoviesGrid.jsx","webpack://react-homework-template/./src/shared/components/Rating/rating.module.scss?02c3","shared/components/Rating/Rating.jsx","webpack://react-homework-template/./src/modules/MoviesList/movies-list.module.scss?f232","modules/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/modules/OptionsForm/options-form.module.scss?0e1b","modules/OptionsForm/OptionsForm.jsx","pages/HomePage/HomePage.jsx","shared/api/api.js","webpack://react-homework-template/./src/shared/components/Button/button.module.scss?9580","shared/components/Button/Button.jsx","shared/utils/utils.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"gird\":\"movies-grid_gird__zrLPJ\"};","import styles from './movies-grid.module.scss';\n\nconst MoviesGrid = ({children}) => {\n    return (\n        <ul className={styles.gird}>{children}</ul>\n    )\n}\n\nexport default MoviesGrid;","// extracted by mini-css-extract-plugin\nexport default {\"rating\":\"rating_rating__hlgi+\",\"diagram\":\"rating_diagram__x-RaL\",\"circleBg\":\"rating_circleBg__qW11Z\",\"progress\":\"rating_progress__4Z1eL\",\"ratingNumber\":\"rating_ratingNumber__cBuLE\",\"percentSign\":\"rating_percentSign__oLwcY\"};","import styles from './rating.module.scss';\n\nimport {countRatingPercentage} from '../../utils/utils';\n\nconst Rating = ({vote}) => {\n    const percentage = countRatingPercentage(vote);\n    const radius = 9;\n    const dashArray = radius * Math.PI * 2;\n    const dashOffset = dashArray - (dashArray * percentage) / 100;\n    return (\n        <div className={styles.rating}>\n            <div className={styles.diagram}>\n                <svg  \n                    width=\"40\" \n                    height=\"40\" \n                    viewBox={`0 0 21 21`}\n                >\n                    <circle \n                        cx=\"10\" cy=\"10\" r={radius}\n                        strokeWidth=\"1px\" \n                        className={styles.circleBg}\n\n                    />\n                    <circle \n                        cx=\"10\" cy=\"10\" r={radius}\n                        strokeWidth=\"1px\" \n                        className={styles.progress}\n                        style={{\n                            strokeDasharray: dashArray,\n                            strokeDashoffset: dashOffset,\n                        }}\n                        transform='rotate(-90 10 10)'\n                    />\n                </svg>\n            </div>\n            <span className={styles.ratingNumber}>{percentage}</span>\n            {percentage > 0 && <span className={styles.percentSign}>%</span>}\n        </div>\n    )\n}\n\nexport default Rating;","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"movies-list_item__pgu-A\",\"link\":\"movies-list_link__w7PyE\",\"poster\":\"movies-list_poster__7scci\",\"meta\":\"movies-list_meta__46nNy\",\"title\":\"movies-list_title__DOqi4\",\"release\":\"movies-list_release__j11oL\"};","import {Link, useLocation} from 'react-router-dom';\nimport {PropTypes} from 'prop-types';\n\nimport MoviesGrid from '../../shared/components/MoviesGrid';\nimport Rating from '../../shared/components/Rating/Rating';\n\nimport {formatDate} from '../../shared/utils/utils';\nimport defaultPoster from '../../shared/images/default-poster.png';\nimport styles from './movies-list.module.scss';\n\nconst MoviesList = ({items}) => {\n    const location = useLocation();\n    \n    return (\n        <MoviesGrid>\n            {\n                items.map(({id, title, poster_path, vote_average, release_date = null}) => {\n                    const date = formatDate(release_date);\n                    const poster = poster_path?.length > 0 ? `https://image.tmdb.org/t/p/w500${poster_path}` : defaultPoster;\n                    return (<li className={styles.item} key={id}>\n                                <div className={styles.link}>\n                                    <Link className={styles.poster} state={{from: location}} to={`/goit-react-hw-05-movies/movies/${id}`}>\n                                        <img className={styles.image} src={poster} alt=\"{title}\" />\n                                    </Link>\n                                    <div className={styles.meta}>\n                                        <Rating vote={vote_average} />\n                                        <Link state={{from: location}} to={`/goit-react-hw-05-movies/movies/${id}`} className={styles.title}>{title}</Link>\n                                        {date && <p className={styles.release}>{date}</p>}\n                                    </div>\n                                </div>\n                            </li>);\n                })\n            }\n        </MoviesGrid>\n    )\n}\n\nexport default MoviesList;\n\nMoviesList.defaultProps = {\n    items: []\n}\n\nMoviesList.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired,\n    })).isRequired,\n}","// extracted by mini-css-extract-plugin\nexport default {\"option\":\"options-form_option__MD25H\"};","import {PropTypes} from 'prop-types';\n\nimport styles from './options-form.module.scss';\n\nconst OptionsForm = ({onChange, option}) => {\n    const handleChange = ({target}) => {\n        onChange(target);\n    }\n\n    return (\n        <form>\n            <label className={styles.option}>\n                <input \n                    type=\"radio\" \n                    name=\"option\" \n                    value=\"day\" \n                    onChange={handleChange}\n                    checked={option === \"day\"}\n                /> Today\n            </label>\n            <label className={styles.option}>\n                <input \n                    type=\"radio\" \n                    name=\"option\"\n                    value=\"week\" \n                    onChange={handleChange}\n                    checked={option === \"week\"}\n                /> This week\n            </label>\n        </form>\n    )\n}\n\nexport default OptionsForm;\n\nOptionsForm.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    option: PropTypes.oneOf([\"day\", \"week\"]).isRequired,\n}","import {useState, useEffect} from 'react';\n\nimport OptionsForm from '../../modules/OptionsForm';\nimport MoviesList from '../../modules/MoviesList';\nimport Loading from '../../shared/components/Loading';\nimport Button from '../../shared/components/Button';\n\nimport {getTrendingMovies} from '../../shared/api/api';\n\n// import styles from './home-page.module.scss';\n\nconst HomePage = () => {\n    const [state, setState] = useState({\n        items: [],\n        page: 1,\n        loading: false,\n        error: null,\n    })\n\n    const [option, setOption] = useState(\"day\");\n\n    useEffect(() => {\n        const fetchMovies = async() => {\n            setState(prevState => ({\n                ...prevState, \n                loading: true,\n                error: null,\n            }));\n            try {\n                const data = await getTrendingMovies(option, state.page);\n                setState(prevState => ({\n                    ...prevState,\n                    items: [...prevState.items, ...data]\n                }));\n            }\n            catch (error) {\n                setState(prevState => ({\n                    ...prevState,\n                    error,\n                }));\n            } finally {\n                setState(prevState => ({\n                    ...prevState, \n                    loading: false \n                }));\n            }\n        }\n        fetchMovies();\n    }, [setState, option, state.page]);\n\n    const handleOptionChange = (target) => {\n        setState(prevState => ({\n            ...prevState,\n            items: []\n        }));\n        setOption(target.value);\n    }\n    const handleShowMore = () => {\n        setState(prevState => ({\n            ...prevState,\n            page: prevState.page + 1,\n        }));\n    }\n\n    const {items, loading, error} = state;\n    const isItems = items.length > 0;\n\n    return(\n        <div className=\"container\">\n            <h1 className=\"title\">Trending Movies</h1>\n            <OptionsForm onChange={handleOptionChange} option={option} />\n            {isItems && <MoviesList items={items} onChange={handleOptionChange} />}\n            {loading && <Loading />}\n            {error && <p>Some error occured</p>}\n            {isItems && <Button onClick={handleShowMore}>Show more</Button>}\n        </div>\n    )\n}\n\nexport default HomePage;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n    params: {\n        api_key: \"280dfc47f55a5a95f0363880d2199c9a\",\n    }\n});\n\nexport const getTrendingMovies = async(period = \"day\", page = 1) => {\n    const {data} = await instance.get(`/trending/movie/${period}`, {\n        params: {\n            page,\n        }\n    })\n\n    return data.results;\n}\n\nexport const getMovieById = async(movie_id) => {\n    const {data} = await instance.get(`/movie/${movie_id}`, {})\n    return data;\n}\n\nexport const getReviews = async(movie_id) => {\n    const {data} = await instance.get(`/movie/${movie_id}/reviews`, {})\n    return data.results;\n}\n\nexport const getCast = async(movie_id) => {\n    const {data} = await instance.get(`/movie/${movie_id}/credits`, {})\n    return data.cast;\n}\n\nexport const searchMovies = async(query, page = 1) => {\n    const {data} = await instance.get(`/search/movie`, {\n        params: {\n            query,\n            page,\n        }\n    })\n\n    return data.results;\n}","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"button_button__vTaVn\"};","import PropTypes from 'prop-types';\n\nimport styles from './button.module.scss';\n\nconst Button = ({onClick = null, type = \"button\", children}) => {\n    return (\n        <>\n            {Boolean(onClick) && <button className={styles.button} onClick={onClick} type={type}>{children}</button>}\n            {!Boolean(onClick) && <button className={styles.button} type={type}>{children}</button>}\n        </>\n    )\n}\n\nexport default Button;\n\nButton.propTypes = {\n    onClick: PropTypes.func,\n    type: PropTypes.oneOf([\"button\", \"submit\"]),\n    children: PropTypes.element,\n}\n","import { format } from \"date-fns\";\n\nexport const countRatingPercentage = (integer) => {\n    if (integer > 0) {\n        return Math.round(integer * 10);\n    }\n    return \"NR\";\n}\n\nexport const formatDate = (date) => {\n    if (date === null || date === \"\"  || date === undefined) {\n        return undefined;\n    }\n    const formatDate = date + \"T12:00:00\";\n    return format(Date.parse(formatDate), 'MMM dd, yyyy');\n}"],"names":["children","className","styles","vote","percentage","countRatingPercentage","dashArray","Math","PI","dashOffset","width","height","viewBox","cx","cy","r","strokeWidth","style","strokeDasharray","strokeDashoffset","transform","MoviesList","items","location","useLocation","map","id","title","poster_path","vote_average","release_date","date","formatDate","poster","length","defaultPoster","state","from","to","src","alt","defaultProps","onChange","option","handleChange","target","type","name","value","checked","useState","page","loading","error","setState","setOption","useEffect","fetchMovies","prevState","getTrendingMovies","data","handleOptionChange","isItems","Loading","Button","onClick","instance","axios","baseURL","params","api_key","period","get","results","getMovieById","movie_id","getReviews","getCast","cast","searchMovies","query","Boolean","integer","round","undefined","format","Date","parse"],"sourceRoot":""}