{"version":3,"file":"static/js/999.cd710aff.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/shared/components/MoviesGrid/movies-grid.module.scss?df0c","shared/components/MoviesGrid/MoviesGrid.jsx","webpack://react-homework-template/./src/shared/components/Rating/rating.module.scss?02c3","shared/components/Rating/Rating.jsx","webpack://react-homework-template/./src/modules/MoviesList/movies-list.module.scss?f232","modules/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/modules/MoviesSearchForm/movies-search-form.module.scss?b736","modules/MoviesSearchForm/MoviesSearchForm.jsx","pages/MoviesSearchPage/MoviesSearchPage.jsx","shared/api/api.js","webpack://react-homework-template/./src/shared/components/Button/button.module.scss?9580","shared/components/Button/Button.jsx","shared/utils/utils.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"gird\":\"movies-grid_gird__zrLPJ\"};","import styles from './movies-grid.module.scss';\n\nconst MoviesGrid = ({children}) => {\n    return (\n        <ul className={styles.gird}>{children}</ul>\n    )\n}\n\nexport default MoviesGrid;","// extracted by mini-css-extract-plugin\nexport default {\"rating\":\"rating_rating__hlgi+\",\"diagram\":\"rating_diagram__x-RaL\",\"circleBg\":\"rating_circleBg__qW11Z\",\"progress\":\"rating_progress__4Z1eL\",\"ratingNumber\":\"rating_ratingNumber__cBuLE\",\"percentSign\":\"rating_percentSign__oLwcY\"};","import styles from './rating.module.scss';\n\nimport {countRatingPercentage} from '../../utils/utils';\n\nconst Rating = ({vote}) => {\n    const percentage = countRatingPercentage(vote);\n    // const circleWidth = 40;\n    const radius = 9;\n    const dashArray = radius * Math.PI * 2;\n    const dashOffset = dashArray - (dashArray * percentage) / 100;\n    return (\n        <div className={styles.rating}>\n            <div className={styles.diagram}>\n                <svg  \n                    width=\"40\" \n                    height=\"40\" \n                    viewBox={`0 0 21 21`}\n                >\n                    <circle \n                        cx=\"10\" cy=\"10\" r={radius}\n                        strokeWidth=\"1px\" \n                        className={styles.circleBg}\n\n                    />\n                    <circle \n                        cx=\"10\" cy=\"10\" r={radius}\n                        strokeWidth=\"1px\" \n                        className={styles.progress}\n                        style={{\n                            strokeDasharray: dashArray,\n                            strokeDashoffset: dashOffset,\n                        }}\n                        transform='rotate(-90 10 10)'\n                    />\n                </svg>\n            </div>\n            <span className={styles.ratingNumber}>{percentage}</span>\n            <span className={styles.percentSign}>%</span>\n        </div>\n    )\n}\n\nexport default Rating;","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"movies-list_item__pgu-A\",\"link\":\"movies-list_link__w7PyE\",\"poster\":\"movies-list_poster__7scci\",\"meta\":\"movies-list_meta__46nNy\",\"title\":\"movies-list_title__DOqi4\",\"release\":\"movies-list_release__j11oL\"};","import {Link, useLocation} from 'react-router-dom';\nimport {PropTypes} from 'prop-types';\n\nimport MoviesGrid from '../../shared/components/MoviesGrid';\nimport Rating from '../../shared/components/Rating/Rating';\n\nimport {formatDate} from '../../shared/utils/utils';\n\nimport styles from './movies-list.module.scss';\n\nconst MoviesList = ({items}) => {\n    const location = useLocation();\n    \n    return (\n        <MoviesGrid>\n            {\n                items.map(({id, title, poster_path, vote_average, release_date}) => {\n                    const date = formatDate(release_date);\n                    \n                    return (<li className={styles.item} key={id}>\n                                <div className={styles.link}>\n                                    <Link className={styles.poster} state={{from: location}} to={`/goit-react-hw-05-movies/movies/${id}`}>\n                                        <img className={styles.image} src={`https://image.tmdb.org/t/p/w500${poster_path}`} alt=\"{title}\" />\n                                    </Link>\n                                    <div className={styles.meta}>\n                                        <Rating vote={vote_average} />\n                                        <Link state={{from: location}} to={`/goit-react-hw-05-movies/movies/${id}`} className={styles.title}>{title}</Link>\n                                        <p className={styles.release}>{date}</p>\n                                    </div>\n                                </div>\n                            </li>);\n                })\n            }\n        </MoviesGrid>\n    )\n}\n\nexport default MoviesList;\n\nMoviesList.defaultProps = {\n    items: []\n}\n\nMoviesList.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired,\n    })).isRequired,\n}","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"movies-search-form_input__T0UhV\"};","import {useState} from 'react';\n\nimport Button from '../../shared/components/Button';\n\nimport styles from './movies-search-form.module.scss';\n\nconst MoviesSearchForm = ({onSubmit}) => {\n    const [state, setState] = useState(\"\");\n \n    const handleChange = ({target}) => {\n        setState(target.value);\n    }\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        onSubmit(state);\n        setState(\"\");\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input \n                name=\"query\"\n                value={state}\n                onChange={handleChange}\n                placeholder=\"Movies search\"\n                required\n                className={styles.input}\n            />\n            <Button type=\"submit\">Search</Button>\n        </form>\n    )\n}\n\nexport default MoviesSearchForm;","import {useState, useEffect} from 'react';\nimport {useSearchParams} from 'react-router-dom';\n\nimport MoviesSearchForm from '../../modules/MoviesSearchForm';\nimport MoviesList from '../../modules/MoviesList';\nimport Loading from '../../shared/components/Loading';\nimport Button from '../../shared/components/Button';\n\nimport {searchMovies} from '../../shared/api/api';\n// import styles from './movies-search-page.scss';\n\nconst MoviesSearchPage = () => {\n    const [state, setState] = useState({\n        items: [],\n        page: 1,\n        loading: false,\n        error: null,\n    });\n    const [searchParams, setSearchParams] = useSearchParams();\n    const search = searchParams.get(\"search\");\n\n    useEffect(() => {\n        const fetchMovies = async() => {\n            try {\n                setState(prevState =>({\n                    ...prevState,\n                    loading: true,\n                }));\n                const data = await searchMovies(search, state.page);\n                setState(prevState =>({\n                    ...prevState,\n                    items: [...prevState.items, ...data],\n                }));\n            } catch (error) {\n                setState(prevState =>({\n                    ...prevState,\n                    error,\n                }));\n            } finally {\n                setState(prevState =>({\n                    ...prevState,\n                    loading: false,\n                }));\n            }\n        }\n        if(search) {\n            fetchMovies();\n        }\n            \n        }, [search, state.page, setState])\n\n    const onSubmit = (search) => {\n        setSearchParams({search});\n        setState(prevState =>({\n            ...prevState,\n            items: [],\n            page: 1,\n            error: null,\n        }));\n    }\n\n    const handleShowMore = () => {\n        setState(prevState =>({\n            ...prevState,\n            page: prevState.page + 1,\n        }));\n    }\n\n    const {items, loading} = state;\n    const isItems = items.length > 0;\n    return(\n        <div className=\"container\">\n            <h1 className=\"title\">Movies Search Page</h1>\n            <MoviesSearchForm onSubmit={onSubmit} />\n            {isItems && <MoviesList items={items} />}\n            {loading && <Loading />}\n            {isItems && <Button onClick={handleShowMore}>Show more</Button>}\n        </div>\n    )   \n}\n\nexport default MoviesSearchPage;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n    params: {\n        api_key: \"280dfc47f55a5a95f0363880d2199c9a\",\n    }\n});\n\nexport const getTrendingMovies = async(period = \"day\", page = 1) => {\n    const {data} = await instance.get(`/trending/movie/${period}`, {\n        params: {\n            page,\n        }\n    })\n\n    return data.results;\n}\n\nexport const getMovieById = async(movie_id) => {\n    const {data} = await instance.get(`/movie/${movie_id}`, {})\n    return data;\n}\n\nexport const getReviews = async(movie_id) => {\n    const {data} = await instance.get(`/movie/${movie_id}/reviews`, {})\n    return data.results;\n}\n\nexport const getCast = async(movie_id) => {\n    const {data} = await instance.get(`/movie/${movie_id}/credits`, {})\n    return data.cast;\n}\n\nexport const searchMovies = async(query, page = 1) => {\n    const {data} = await instance.get(`/search/movie`, {\n        params: {\n            query,\n            page,\n        }\n    })\n\n    return data.results;\n}","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"button_button__vTaVn\"};","import PropTypes from 'prop-types';\n\nimport styles from './button.module.scss';\n\nconst Button = ({onClick = null, type = \"button\", children}) => {\n    return (\n        <>\n            {Boolean(onClick) && <button className={styles.button} onClick={onClick} type={type}>{children}</button>}\n            {!Boolean(onClick) && <button className={styles.button} type={type}>{children}</button>}\n        </>\n    )\n}\n\nexport default Button;\n\nButton.propTypes = {\n    onClick: PropTypes.func,\n    type: PropTypes.oneOf([\"button\", \"submit\"]),\n    children: PropTypes.element,\n}\n","import { format } from \"date-fns\";\n\nexport const countRatingPercentage = (integer) => {\n    return Math.round(integer * 10);\n}\n\nexport const formatDate = (date) => {\n    const formatDate = date + \"T12:00:00\";\n    return format(Date.parse(formatDate), 'MMM dd, yyyy');\n}"],"names":["children","className","styles","vote","percentage","countRatingPercentage","dashArray","Math","PI","dashOffset","width","height","viewBox","cx","cy","r","strokeWidth","style","strokeDasharray","strokeDashoffset","transform","MoviesList","items","location","useLocation","map","id","title","poster_path","vote_average","release_date","date","formatDate","state","from","to","src","alt","defaultProps","onSubmit","useState","setState","event","preventDefault","name","value","onChange","target","placeholder","required","Button","type","page","loading","error","useSearchParams","searchParams","setSearchParams","search","get","useEffect","fetchMovies","prevState","searchMovies","data","isItems","length","Loading","onClick","instance","axios","baseURL","params","api_key","getTrendingMovies","period","results","getMovieById","movie_id","getReviews","getCast","cast","query","Boolean","integer","round","format","Date","parse"],"sourceRoot":""}