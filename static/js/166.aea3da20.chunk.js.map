{"version":3,"file":"static/js/166.aea3da20.chunk.js","mappings":"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","sources":["../node_modules/fast-average-color/dist/index.esm.js","webpack://react-homework-template/./src/modules/MovieDetails/movie-details.module.scss?3a77","modules/MovieDetails/MovieDetails.jsx","webpack://react-homework-template/./src/pages/MovieDetailsPage/movie-details-page.module.scss?1a1a","pages/MovieDetailsPage/MovieDetailsPage.jsx","shared/api/api.js","webpack://react-homework-template/./src/shared/components/Error/error.module.scss?3b72","shared/components/Error/Error.jsx","shared/components/Rating/Rating.jsx","shared/utils/utils.js","webpack://react-homework-template/./src/shared/components/Rating/rating.module.scss?02c3"],"sourcesContent":["/*! Fast Average Color | © 2022 Denis Seleznev | MIT License | https://github.com/fast-average-color/fast-average-color */\nfunction toHex(num) {\n    var str = num.toString(16);\n    return str.length === 1 ? '0' + str : str;\n}\nfunction arrayToHex(arr) {\n    return '#' + arr.map(toHex).join('');\n}\nfunction isDark(color) {\n    // http://www.w3.org/TR/AERT#color-contrast\n    var result = (color[0] * 299 + color[1] * 587 + color[2] * 114) / 1000;\n    return result < 128;\n}\nfunction prepareIgnoredColor(color) {\n    if (!color) {\n        return [];\n    }\n    return isRGBArray(color) ? color : [color];\n}\nfunction isRGBArray(value) {\n    return Array.isArray(value[0]);\n}\nfunction isIgnoredColor(data, index, ignoredColor) {\n    for (var i = 0; i < ignoredColor.length; i++) {\n        if (isIgnoredColorAsNumbers(data, index, ignoredColor[i])) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction isIgnoredColorAsNumbers(data, index, ignoredColor) {\n    switch (ignoredColor.length) {\n        case 3:\n            // [red, green, blue]\n            if (isIgnoredRGBColor(data, index, ignoredColor)) {\n                return true;\n            }\n            break;\n        case 4:\n            // [red, green, blue, alpha]\n            if (isIgnoredRGBAColor(data, index, ignoredColor)) {\n                return true;\n            }\n            break;\n        case 5:\n            // [red, green, blue, alpha, threshold]\n            if (isIgnoredRGBAColorWithThreshold(data, index, ignoredColor)) {\n                return true;\n            }\n            break;\n        default:\n            return false;\n    }\n}\nfunction isIgnoredRGBColor(data, index, ignoredColor) {\n    // Ignore if the pixel are transparent.\n    if (data[index + 3] !== 255) {\n        return true;\n    }\n    if (data[index] === ignoredColor[0] &&\n        data[index + 1] === ignoredColor[1] &&\n        data[index + 2] === ignoredColor[2]) {\n        return true;\n    }\n    return false;\n}\nfunction isIgnoredRGBAColor(data, index, ignoredColor) {\n    if (data[index + 3] && ignoredColor[3]) {\n        return data[index] === ignoredColor[0] &&\n            data[index + 1] === ignoredColor[1] &&\n            data[index + 2] === ignoredColor[2] &&\n            data[index + 3] === ignoredColor[3];\n    }\n    // Ignore rgb components if the pixel are fully transparent.\n    return data[index + 3] === ignoredColor[3];\n}\nfunction inRange(colorComponent, ignoredColorComponent, value) {\n    return colorComponent >= (ignoredColorComponent - value) &&\n        colorComponent <= (ignoredColorComponent + value);\n}\nfunction isIgnoredRGBAColorWithThreshold(data, index, ignoredColor) {\n    var redIgnored = ignoredColor[0];\n    var greenIgnored = ignoredColor[1];\n    var blueIgnored = ignoredColor[2];\n    var alphaIgnored = ignoredColor[3];\n    var threshold = ignoredColor[4];\n    var alphaData = data[index + 3];\n    var alphaInRange = inRange(alphaData, alphaIgnored, threshold);\n    if (!alphaIgnored) {\n        return alphaInRange;\n    }\n    if (!alphaData && alphaInRange) {\n        return true;\n    }\n    if (inRange(data[index], redIgnored, threshold) &&\n        inRange(data[index + 1], greenIgnored, threshold) &&\n        inRange(data[index + 2], blueIgnored, threshold) &&\n        alphaInRange) {\n        return true;\n    }\n    return false;\n}\n\nfunction dominantAlgorithm(arr, len, options) {\n    var colorHash = {};\n    var divider = 24;\n    var ignoredColor = options.ignoredColor;\n    var step = options.step;\n    var max = [0, 0, 0, 0, 0];\n    for (var i = 0; i < len; i += step) {\n        var red = arr[i];\n        var green = arr[i + 1];\n        var blue = arr[i + 2];\n        var alpha = arr[i + 3];\n        if (ignoredColor && isIgnoredColor(arr, i, ignoredColor)) {\n            continue;\n        }\n        var key = Math.round(red / divider) + ',' +\n            Math.round(green / divider) + ',' +\n            Math.round(blue / divider);\n        if (colorHash[key]) {\n            colorHash[key] = [\n                colorHash[key][0] + red * alpha,\n                colorHash[key][1] + green * alpha,\n                colorHash[key][2] + blue * alpha,\n                colorHash[key][3] + alpha,\n                colorHash[key][4] + 1\n            ];\n        }\n        else {\n            colorHash[key] = [red * alpha, green * alpha, blue * alpha, alpha, 1];\n        }\n        if (max[4] < colorHash[key][4]) {\n            max = colorHash[key];\n        }\n    }\n    var redTotal = max[0];\n    var greenTotal = max[1];\n    var blueTotal = max[2];\n    var alphaTotal = max[3];\n    var count = max[4];\n    return alphaTotal ? [\n        Math.round(redTotal / alphaTotal),\n        Math.round(greenTotal / alphaTotal),\n        Math.round(blueTotal / alphaTotal),\n        Math.round(alphaTotal / count)\n    ] : options.defaultColor;\n}\n\nfunction simpleAlgorithm(arr, len, options) {\n    var redTotal = 0;\n    var greenTotal = 0;\n    var blueTotal = 0;\n    var alphaTotal = 0;\n    var count = 0;\n    var ignoredColor = options.ignoredColor;\n    var step = options.step;\n    for (var i = 0; i < len; i += step) {\n        var alpha = arr[i + 3];\n        var red = arr[i] * alpha;\n        var green = arr[i + 1] * alpha;\n        var blue = arr[i + 2] * alpha;\n        if (ignoredColor && isIgnoredColor(arr, i, ignoredColor)) {\n            continue;\n        }\n        redTotal += red;\n        greenTotal += green;\n        blueTotal += blue;\n        alphaTotal += alpha;\n        count++;\n    }\n    return alphaTotal ? [\n        Math.round(redTotal / alphaTotal),\n        Math.round(greenTotal / alphaTotal),\n        Math.round(blueTotal / alphaTotal),\n        Math.round(alphaTotal / count)\n    ] : options.defaultColor;\n}\n\nfunction sqrtAlgorithm(arr, len, options) {\n    var redTotal = 0;\n    var greenTotal = 0;\n    var blueTotal = 0;\n    var alphaTotal = 0;\n    var count = 0;\n    var ignoredColor = options.ignoredColor;\n    var step = options.step;\n    for (var i = 0; i < len; i += step) {\n        var red = arr[i];\n        var green = arr[i + 1];\n        var blue = arr[i + 2];\n        var alpha = arr[i + 3];\n        if (ignoredColor && isIgnoredColor(arr, i, ignoredColor)) {\n            continue;\n        }\n        redTotal += red * red * alpha;\n        greenTotal += green * green * alpha;\n        blueTotal += blue * blue * alpha;\n        alphaTotal += alpha;\n        count++;\n    }\n    return alphaTotal ? [\n        Math.round(Math.sqrt(redTotal / alphaTotal)),\n        Math.round(Math.sqrt(greenTotal / alphaTotal)),\n        Math.round(Math.sqrt(blueTotal / alphaTotal)),\n        Math.round(alphaTotal / count)\n    ] : options.defaultColor;\n}\n\nfunction getDefaultColor(options) {\n    return getOption(options, 'defaultColor', [0, 0, 0, 0]);\n}\nfunction getOption(options, name, defaultValue) {\n    return (options[name] === undefined ? defaultValue : options[name]);\n}\n\nvar MIN_SIZE = 10;\nvar MAX_SIZE = 100;\nfunction isSvg(filename) {\n    return filename.search(/\\.svg(\\?|$)/i) !== -1;\n}\nfunction getOriginalSize(resource) {\n    if (isInstanceOfHTMLImageElement(resource)) {\n        var width = resource.naturalWidth;\n        var height = resource.naturalHeight;\n        // For SVG images with only viewBox attribute\n        if (!resource.naturalWidth && isSvg(resource.src)) {\n            width = height = MAX_SIZE;\n        }\n        return {\n            width: width,\n            height: height,\n        };\n    }\n    if (isInstanceOfHTMLVideoElement(resource)) {\n        return {\n            width: resource.videoWidth,\n            height: resource.videoHeight\n        };\n    }\n    return {\n        width: resource.width,\n        height: resource.height\n    };\n}\nfunction getSrc(resource) {\n    if (isInstanceOfHTMLCanvasElement(resource)) {\n        return 'canvas';\n    }\n    if (isInstanceOfOffscreenCanvas(resource)) {\n        return 'offscreencanvas';\n    }\n    if (isInstanceOfImageBitmap(resource)) {\n        return 'imagebitmap';\n    }\n    return resource.src;\n}\nfunction isInstanceOfHTMLImageElement(resource) {\n    return typeof HTMLImageElement !== 'undefined' && resource instanceof HTMLImageElement;\n}\nvar hasOffscreenCanvas = typeof OffscreenCanvas !== 'undefined';\nfunction isInstanceOfOffscreenCanvas(resource) {\n    return hasOffscreenCanvas && resource instanceof OffscreenCanvas;\n}\nfunction isInstanceOfHTMLVideoElement(resource) {\n    return typeof HTMLVideoElement !== 'undefined' && resource instanceof HTMLVideoElement;\n}\nfunction isInstanceOfHTMLCanvasElement(resource) {\n    return typeof HTMLCanvasElement !== 'undefined' && resource instanceof HTMLCanvasElement;\n}\nfunction isInstanceOfImageBitmap(resource) {\n    return typeof ImageBitmap !== 'undefined' && resource instanceof ImageBitmap;\n}\nfunction prepareSizeAndPosition(originalSize, options) {\n    var srcLeft = getOption(options, 'left', 0);\n    var srcTop = getOption(options, 'top', 0);\n    var srcWidth = getOption(options, 'width', originalSize.width);\n    var srcHeight = getOption(options, 'height', originalSize.height);\n    var destWidth = srcWidth;\n    var destHeight = srcHeight;\n    if (options.mode === 'precision') {\n        return {\n            srcLeft: srcLeft,\n            srcTop: srcTop,\n            srcWidth: srcWidth,\n            srcHeight: srcHeight,\n            destWidth: destWidth,\n            destHeight: destHeight\n        };\n    }\n    var factor;\n    if (srcWidth > srcHeight) {\n        factor = srcWidth / srcHeight;\n        destWidth = MAX_SIZE;\n        destHeight = Math.round(destWidth / factor);\n    }\n    else {\n        factor = srcHeight / srcWidth;\n        destHeight = MAX_SIZE;\n        destWidth = Math.round(destHeight / factor);\n    }\n    if (destWidth > srcWidth || destHeight > srcHeight ||\n        destWidth < MIN_SIZE || destHeight < MIN_SIZE) {\n        destWidth = srcWidth;\n        destHeight = srcHeight;\n    }\n    return {\n        srcLeft: srcLeft,\n        srcTop: srcTop,\n        srcWidth: srcWidth,\n        srcHeight: srcHeight,\n        destWidth: destWidth,\n        destHeight: destHeight\n    };\n}\nvar isWebWorkers = typeof window === 'undefined';\nfunction makeCanvas() {\n    if (isWebWorkers) {\n        return hasOffscreenCanvas ? new OffscreenCanvas(1, 1) : null;\n    }\n    return document.createElement('canvas');\n}\n\nvar ERROR_PREFIX = 'FastAverageColor: ';\nfunction getError(message) {\n    return Error(ERROR_PREFIX + message);\n}\nfunction outputError(error, silent) {\n    if (!silent) {\n        console.error(error);\n    }\n}\n\nvar FastAverageColor = /** @class */ (function () {\n    function FastAverageColor() {\n        this.canvas = null;\n        this.ctx = null;\n    }\n    /**\n     * Get asynchronously the average color from not loaded image.\n     */\n    FastAverageColor.prototype.getColorAsync = function (resource, options) {\n        if (!resource) {\n            return Promise.reject(getError('call .getColorAsync() without resource.'));\n        }\n        if (typeof resource === 'string') {\n            // Web workers\n            if (typeof Image === 'undefined') {\n                return Promise.reject(getError('resource as string is not supported in this environment'));\n            }\n            var img = new Image();\n            img.crossOrigin = options && options.crossOrigin || '';\n            img.src = resource;\n            return this.bindImageEvents(img, options);\n        }\n        else if (isInstanceOfHTMLImageElement(resource) && !resource.complete) {\n            return this.bindImageEvents(resource, options);\n        }\n        else {\n            var result = this.getColor(resource, options);\n            return result.error ? Promise.reject(result.error) : Promise.resolve(result);\n        }\n    };\n    /**\n     * Get the average color from images, videos and canvas.\n     */\n    FastAverageColor.prototype.getColor = function (resource, options) {\n        options = options || {};\n        var defaultColor = getDefaultColor(options);\n        if (!resource) {\n            var error = getError('call .getColor(null) without resource');\n            outputError(error, options.silent);\n            return this.prepareResult(defaultColor, error);\n        }\n        var originalSize = getOriginalSize(resource);\n        var size = prepareSizeAndPosition(originalSize, options);\n        if (!size.srcWidth || !size.srcHeight || !size.destWidth || !size.destHeight) {\n            var error = getError(\"incorrect sizes for resource \\\"\".concat(getSrc(resource), \"\\\"\"));\n            outputError(error, options.silent);\n            return this.prepareResult(defaultColor, error);\n        }\n        if (!this.canvas) {\n            this.canvas = makeCanvas();\n            if (!this.canvas) {\n                var error = getError('OffscreenCanvas is not supported in this browser');\n                outputError(error, options.silent);\n                return this.prepareResult(defaultColor, error);\n            }\n        }\n        if (!this.ctx) {\n            this.ctx = this.canvas.getContext('2d', { willReadFrequently: true });\n            if (!this.ctx) {\n                var error = getError('Canvas Context 2D is not supported in this browser');\n                outputError(error, options.silent);\n                return this.prepareResult(defaultColor);\n            }\n            this.ctx.imageSmoothingEnabled = false;\n        }\n        this.canvas.width = size.destWidth;\n        this.canvas.height = size.destHeight;\n        try {\n            this.ctx.clearRect(0, 0, size.destWidth, size.destHeight);\n            this.ctx.drawImage(resource, size.srcLeft, size.srcTop, size.srcWidth, size.srcHeight, 0, 0, size.destWidth, size.destHeight);\n            var bitmapData = this.ctx.getImageData(0, 0, size.destWidth, size.destHeight).data;\n            return this.prepareResult(this.getColorFromArray4(bitmapData, options));\n        }\n        catch (originalError) {\n            var error = getError(\"security error (CORS) for resource \".concat(getSrc(resource), \".\\nDetails: https://developer.mozilla.org/en/docs/Web/HTML/CORS_enabled_image\"));\n            outputError(error, options.silent);\n            !options.silent && console.error(originalError);\n            return this.prepareResult(defaultColor, error);\n        }\n    };\n    /**\n     * Get the average color from a array when 1 pixel is 4 bytes.\n     */\n    FastAverageColor.prototype.getColorFromArray4 = function (arr, options) {\n        options = options || {};\n        var bytesPerPixel = 4;\n        var arrLength = arr.length;\n        var defaultColor = getDefaultColor(options);\n        if (arrLength < bytesPerPixel) {\n            return defaultColor;\n        }\n        var len = arrLength - arrLength % bytesPerPixel;\n        var step = (options.step || 1) * bytesPerPixel;\n        var algorithm;\n        switch (options.algorithm || 'sqrt') {\n            case 'simple':\n                algorithm = simpleAlgorithm;\n                break;\n            case 'sqrt':\n                algorithm = sqrtAlgorithm;\n                break;\n            case 'dominant':\n                algorithm = dominantAlgorithm;\n                break;\n            default:\n                throw getError(\"\".concat(options.algorithm, \" is unknown algorithm\"));\n        }\n        return algorithm(arr, len, {\n            defaultColor: defaultColor,\n            ignoredColor: prepareIgnoredColor(options.ignoredColor),\n            step: step\n        });\n    };\n    /**\n     * Get color data from value ([r, g, b, a]).\n     */\n    FastAverageColor.prototype.prepareResult = function (value, error) {\n        var rgb = value.slice(0, 3);\n        var rgba = [value[0], value[1], value[2], value[3] / 255];\n        var isDarkColor = isDark(value);\n        return {\n            value: [value[0], value[1], value[2], value[3]],\n            rgb: 'rgb(' + rgb.join(',') + ')',\n            rgba: 'rgba(' + rgba.join(',') + ')',\n            hex: arrayToHex(rgb),\n            hexa: arrayToHex(value),\n            isDark: isDarkColor,\n            isLight: !isDarkColor,\n            error: error,\n        };\n    };\n    /**\n     * Destroy the instance.\n     */\n    FastAverageColor.prototype.destroy = function () {\n        if (this.canvas) {\n            this.canvas.width = 1;\n            this.canvas.height = 1;\n            this.canvas = null;\n        }\n        this.ctx = null;\n    };\n    FastAverageColor.prototype.bindImageEvents = function (resource, options) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var onload = function () {\n                unbindEvents();\n                var result = _this.getColor(resource, options);\n                if (result.error) {\n                    reject(result.error);\n                }\n                else {\n                    resolve(result);\n                }\n            };\n            var onerror = function () {\n                unbindEvents();\n                reject(getError(\"Error loading image \\\"\".concat(resource.src, \"\\\".\")));\n            };\n            var onabort = function () {\n                unbindEvents();\n                reject(getError(\"Image \\\"\".concat(resource.src, \"\\\" loading aborted\")));\n            };\n            var unbindEvents = function () {\n                resource.removeEventListener('load', onload);\n                resource.removeEventListener('error', onerror);\n                resource.removeEventListener('abort', onabort);\n            };\n            resource.addEventListener('load', onload);\n            resource.addEventListener('error', onerror);\n            resource.addEventListener('abort', onabort);\n        });\n    };\n    return FastAverageColor;\n}());\n\nexport { FastAverageColor };\n","// extracted by mini-css-extract-plugin\nexport default {\"fullweightContainer\":\"movie-details_fullweightContainer__VvGIM\",\"movieCard\":\"movie-details_movieCard__qTPsk\",\"darkThema\":\"movie-details_darkThema__hctvf\",\"poster\":\"movie-details_poster__ksvE2\",\"image\":\"movie-details_image__uzZ+W\",\"meta\":\"movie-details_meta__lk0fH\",\"title\":\"movie-details_title__PKXVj\",\"year\":\"movie-details_year__MQDg6\",\"tagline\":\"movie-details_tagline__x8G5s\",\"subtitle\":\"movie-details_subtitle__fZj5v\",\"overview\":\"movie-details_overview__7fadI\",\"genreList\":\"movie-details_genreList__P4Lwv\",\"genre\":\"movie-details_genre__yKxQj\",\"ratingBlock\":\"movie-details_ratingBlock__GrK7n\",\"ratingWrapper\":\"movie-details_ratingWrapper__VMcpw\"};","import PropTypes from 'prop-types';\nimport {useState, useEffect} from 'react';\nimport { FastAverageColor } from 'fast-average-color';\n\nimport Container from '../../shared/components/Container';\nimport Rating from '../../shared/components/Rating';\nimport styles from './movie-details.module.scss';\n\nimport defaultPoster from '../../shared/images/default-poster.png';\n\nconst MovieDetails = ({item}) => {\n    const [bgColor, setBgColor] = useState(\"rgba(120, 145, 165, 1)\");\n    const [isColorLight, setIsColorLight] = useState(false);\n\n    useEffect(() => {\n        const fac = new FastAverageColor();\n        fac.getColorAsync(`https://image.tmdb.org/t/p/w342${item.poster_path}`, {algorithm: 'simple'})\n        .then(color => {\n            setBgColor(color.rgba);\n            setIsColorLight(!color.isDark);  \n        })\n        .catch(e => {\n            console.log(e);\n        }); \n    }, [item, setBgColor]) \n\n    const {title, poster_path, backdrop_path, tagline, vote_average, overview, genres = [], release_date} = item;\n\n    const poster = poster_path?.length > 0 ? `https://image.tmdb.org/t/p/w500${poster_path}` : defaultPoster;\n\n    const genreList = genres.map(genre => <li key={genre.id} className={styles.genre}>{genre.name}</li>);\n    const year = release_date.slice(0, 4);\n    const gradColor1 = bgColor.slice(0, bgColor.length - 2) + \" 0.9)\";\n    const gradColor2 = bgColor.slice(0, bgColor.length - 2) + \" 0.7)\";\n\n    const movieCardClassList = isColorLight ? `${styles.movieCard} ${styles.darkThema}` : styles.movieCard;\n\n    const containerStyle = {\n        backgroundColor: bgColor,\n        backgroundImage: `linear-gradient(to right,\n             ${gradColor1},\n             ${gradColor2}),\n            url(https://image.tmdb.org/t/p/w1280${backdrop_path})`,\n    }\n      \n    return (\n        <div className={styles.fullweightContainer} style={containerStyle}>\n            <Container>\n                <div className={movieCardClassList}>\n                    <div className={styles.poster}>\n                        <img className={styles.image} src={poster} alt={title} />\n                    </div>\n                    <div className={styles.meta}>\n                        <h1 className={styles.title}>{title} <span className={styles.year}>({year})</span></h1>\n                        <div className={styles.ratingWrapper}><Rating vote={vote_average} /></div>\n                        {tagline?.length > 0 && <p className={styles.tagline}>{tagline}</p>}\n                        <h3 className={styles.subtitle}>Overview</h3>\n                        <p className={styles.overview}>{overview}</p>\n                        <h3 className={styles.subtitle}>Genres</h3>\n                        {genres && <ul className={styles.genreList}>\n                                        {genreList}\n                                    </ul>}\n                    </div>\n                </div>\n            </Container>\n        </div>\n    )\n}\n\nexport default MovieDetails;\n\nMovieDetails.propTypes = {\n    item: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        poster_path: PropTypes.string,\n        vote_average: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.number]).isRequired,\n        overview: PropTypes.string.isRequired,\n        tagline: PropTypes.string,\n        backdrop_path: PropTypes.string,\n        genres: PropTypes.arrayOf(PropTypes.shape({\n            name: PropTypes.string.isRequired,\n            id: PropTypes.number.isRequired,\n        })),\n        release_date: PropTypes.string.isRequired,\n    })\n}","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"movie-details-page_list__Cvdm2\",\"link\":\"movie-details-page_link__EoIAB\",\"active\":\"movie-details-page_active__7HkNa\"};","import {useState, useEffect} from 'react';\nimport {NavLink, Outlet, useParams, useNavigate, useLocation} from 'react-router-dom';\n\nimport MovieDetails from '../../modules/MovieDetails';\nimport Loading from '../../shared/components/Loading';\nimport Error from '../../shared/components/Error';\nimport Container from '../../shared/components/Container';\n\nimport styles from './movie-details-page.module.scss';\n\nimport {getMovieById} from '../../shared/api/api';\n\nconst MovieDetailsPage = () => {\n    const [state, setState] = useState({\n        item: {},\n        loading: false,\n        error: null,\n    });\n    \n    const {movieId} = useParams();\n\n    const navigate = useNavigate();\n    const location = useLocation();\n    const from = location.state?.from || \"/goit-react-hw-05-movies\";\n\n    useEffect(() => {\n        const fetchMovieDetails = async() => {\n            setState(prevState => ({\n                ...prevState, \n                loading: true,\n                error: null,\n            }));\n            try {\n                const data = await getMovieById(movieId);\n                setState(prevState => {\n                    return {\n                        ...prevState,\n                        item: data,\n                    }\n                });\n            }\n            catch (error) {\n                setState(prevState => ({\n                    ...prevState,\n                    error,\n                }));\n            }\n            finally {\n                setState(prevState => {\n                    return {\n                        ...prevState, \n                        loading: false }\n                });\n            }\n        }\n        fetchMovieDetails();\n    }, [movieId, setState])\n\n        const getClassList = ({isActive}) => {\n        return isActive ? `${styles.link} ${styles.active}` : styles.link;\n    }\n\n    const goBack = () => navigate(from);\n\n    const {item, loading, error} = state;\n    const isItem = item.hasOwnProperty(\"title\");\n\n    return (\n        <div>\n            <Container><button onClick={goBack}>Go back</button></Container>\n\n            {loading && <Loading />}\n            {error && <Error>Some error occured</Error>}\n\n            {isItem && <MovieDetails item={state.item} />}\n            \n            {isItem && <Container>\n                <ul className={styles.list}>\n                    <li>\n                        <NavLink className={getClassList} state={{from}} to={`/goit-react-hw-05-movies/movies/${movieId}/cast`}>Cast</NavLink>\n                    </li>\n                    <li>\n                        <NavLink className={getClassList} state={{from}} to={`/goit-react-hw-05-movies/movies/${movieId}/reviews`}>Reviews</NavLink>\n                    </li>\n                </ul>\n            </Container>}\n            <Outlet />\n        </div>\n    )\n}\n\nexport default MovieDetailsPage;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n    params: {\n        api_key: \"280dfc47f55a5a95f0363880d2199c9a\",\n    }\n});\n\nexport const getTrendingMovies = async(period = \"day\", page = 1) => {\n    const {data} = await instance.get(`/trending/movie/${period}`, {\n        params: {\n            page,\n        }\n    })\n\n    return data.results;\n}\n\nexport const getMovieById = async(movie_id) => {\n    const {data} = await instance.get(`/movie/${movie_id}`, {})\n    return data;\n}\n\nexport const getReviews = async(movie_id) => {\n    const {data} = await instance.get(`/movie/${movie_id}/reviews`, {})\n    return data.results;\n}\n\nexport const getCast = async(movie_id) => {\n    const {data} = await instance.get(`/movie/${movie_id}/credits`, {})\n    return data.cast;\n}\n\nexport const searchMovies = async(query, page = 1) => {\n    const {data} = await instance.get(`/search/movie`, {\n        params: {\n            query,\n            page,\n        }\n    })\n\n    return data.results;\n}","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"error_wrapper__-2+js\",\"message\":\"error_message__rY-IE\"};","import PropTypes from 'prop-types';\n\nimport Container from '../Container';\n\nimport styles from './error.module.scss';\n\nconst Error = ({children}) => {\n    return (\n        <Container>\n            <div className={styles.wrapper}>\n                <p className={styles.message}>{children}</p>\n            </div>\n        </Container>\n    )\n}\n\nexport default Error;\n\nError.propTypes = {\n    children: PropTypes.string.isRequired,\n}","import PropTypes from 'prop-types';\n\nimport styles from './rating.module.scss';\n\nimport {getRatingPercentage, getProgressDiagramClasses} from '../../utils/utils';\n\nconst Rating = ({vote}) => {\n    const percentage = getRatingPercentage(vote);\n    const isRated = percentage > 0;\n    const radius = 9;\n    const dashArray = radius * Math.PI * 2;\n    const dashOffset = dashArray - (dashArray * percentage) / 100;\n\n    // console.log(`percentage: ${percentage}, isRated: ${isRated}, dashArray: ${dashArray}, dashOffset: ${dashOffset}`);\n\n    const progressDiagramClasses = getProgressDiagramClasses(percentage);\n\n    return (\n        <div className={styles.rating}>\n            <div className={styles.diagram}>\n                <svg  \n                    width=\"40\" \n                    height=\"40\" \n                    viewBox={`0 0 21 21`}\n                >\n                    <circle \n                        cx=\"10\" cy=\"10\" r={radius}\n                        strokeWidth=\"1px\" \n                        className={styles.circleBg}\n                    />\n                    <circle \n                        cx=\"10\" cy=\"10\" r={radius}\n                        strokeWidth=\"1px\" \n                        className={progressDiagramClasses}\n                        style={{\n                            strokeDasharray: dashArray,\n                            strokeDashoffset: dashOffset,\n                        }}\n                        transform='rotate(-90 10 10)'\n                    />\n                </svg>\n            </div>\n            <span className={styles.ratingNumber}>{isRated ? percentage : \"NR\"}</span>\n            {percentage > 0 && <span className={styles.percentSign}>%</span>}\n        </div>\n    )\n}\n\nexport default Rating;\n\nRating.propTypes = {\n    vote: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number]).isRequired,\n}","import {format} from \"date-fns\";\n\nimport diagramStyles from '../../shared/components/Rating/rating.module.scss';\n\nexport const getRatingPercentage = (rawRating = 0) => {\n    return Math.round(rawRating * 10);\n}\n\nexport const formatDate = (date) => {\n    if (date === null || date === \"\"  || date === undefined) {\n        return undefined;\n    }\n    const formatDate = date + \"T12:00:00\";\n    return format(Date.parse(formatDate), 'MMM dd, yyyy');\n}\n\nexport const getProgressDiagramClasses = (rating) => {\n    let classList = diagramStyles.progress;\n    if (rating >= 70) {\n        classList = `${diagramStyles.progress} ${diagramStyles.high}`;\n    } else if (rating < 70 && rating >= 50) {\n        classList = `${diagramStyles.progress} ${diagramStyles.medium}`;\n    }\n    return classList;\n}","// extracted by mini-css-extract-plugin\nexport default {\"rating\":\"rating_rating__hlgi+\",\"diagram\":\"rating_diagram__x-RaL\",\"circleBg\":\"rating_circleBg__qW11Z\",\"progress\":\"rating_progress__4Z1eL\",\"medium\":\"rating_medium__3UupM\",\"high\":\"rating_high__wws4H\",\"ratingNumber\":\"rating_ratingNumber__cBuLE\",\"percentSign\":\"rating_percentSign__oLwcY\"};"],"names":["toHex","num","str","toString","length","arrayToHex","arr","map","join","prepareIgnoredColor","color","value","Array","isArray","isIgnoredColor","data","index","ignoredColor","i","isIgnoredColorAsNumbers","isIgnoredRGBColor","isIgnoredRGBAColor","redIgnored","greenIgnored","blueIgnored","alphaIgnored","threshold","alphaData","alphaInRange","inRange","isIgnoredRGBAColorWithThreshold","colorComponent","ignoredColorComponent","dominantAlgorithm","len","options","colorHash","step","max","red","green","blue","alpha","key","Math","round","redTotal","greenTotal","blueTotal","alphaTotal","count","defaultColor","simpleAlgorithm","sqrtAlgorithm","sqrt","getDefaultColor","getOption","name","defaultValue","undefined","getOriginalSize","resource","isInstanceOfHTMLImageElement","width","naturalWidth","height","naturalHeight","src","search","HTMLVideoElement","isInstanceOfHTMLVideoElement","videoWidth","videoHeight","getSrc","HTMLCanvasElement","isInstanceOfHTMLCanvasElement","hasOffscreenCanvas","OffscreenCanvas","isInstanceOfOffscreenCanvas","ImageBitmap","isInstanceOfImageBitmap","HTMLImageElement","isWebWorkers","window","getError","message","Error","outputError","error","silent","console","FastAverageColor","this","canvas","ctx","prototype","getColorAsync","Promise","reject","Image","img","crossOrigin","bindImageEvents","complete","result","getColor","resolve","prepareResult","size","originalSize","factor","srcLeft","srcTop","srcWidth","srcHeight","destWidth","destHeight","mode","prepareSizeAndPosition","concat","document","createElement","getContext","willReadFrequently","imageSmoothingEnabled","clearRect","drawImage","bitmapData","getImageData","getColorFromArray4","originalError","arrLength","algorithm","rgb","slice","rgba","isDarkColor","hex","hexa","isDark","isLight","destroy","_this","onload","unbindEvents","onerror","onabort","removeEventListener","addEventListener","item","useState","bgColor","setBgColor","isColorLight","setIsColorLight","useEffect","poster_path","then","catch","e","log","title","backdrop_path","tagline","vote_average","overview","genres","release_date","poster","defaultPoster","genreList","genre","className","styles","id","year","gradColor1","gradColor2","movieCardClassList","containerStyle","backgroundColor","backgroundImage","style","Container","alt","Rating","vote","loading","state","setState","movieId","useParams","navigate","useNavigate","from","useLocation","fetchMovieDetails","prevState","getMovieById","getClassList","isActive","isItem","hasOwnProperty","onClick","Loading","to","instance","axios","baseURL","params","api_key","getTrendingMovies","period","page","get","results","movie_id","getReviews","getCast","cast","searchMovies","query","children","percentage","getRatingPercentage","isRated","dashArray","PI","dashOffset","progressDiagramClasses","getProgressDiagramClasses","viewBox","cx","cy","r","strokeWidth","strokeDasharray","strokeDashoffset","transform","rawRating","formatDate","date","format","Date","parse","rating","classList","diagramStyles"],"sourceRoot":""}