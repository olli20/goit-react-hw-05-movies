{"version":3,"file":"static/js/961.89f708fc.chunk.js","mappings":"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","sources":["modules/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/pages/HomePage/home-page.module.scss?a2f2","pages/HomePage/HomePage.jsx","shared/api/api.js"],"sourcesContent":["import {Link, useLocation} from 'react-router-dom';\nimport {PropTypes} from 'prop-types';\n\nconst MoviesList = ({items}) => {\n    const location = useLocation();\n    const elements = items.map(({id, title}) => {\n        return (<li key={id}>\n                    <Link state={{from: location}} to={`/goit-react-hw-05-movies/movies/${id}`}>{title}</Link>\n                </li>);\n    });\n\n    return (\n        <ul>\n            {elements}\n        </ul>\n    )\n}\n\nexport default MoviesList;\n\nMoviesList.defaultProps = {\n    items: []\n}\n\nMoviesList.propTypes = {\n    items: PropTypes.array.isRequired\n}","// extracted by mini-css-extract-plugin\nexport default {\"option\":\"home-page_option__yILgN\"};","import {useState, useEffect} from 'react';\n\nimport MoviesList from '../../modules/MoviesList/MoviesList';\nimport Loading from '../../shared/components/Loading/Loading';\n\nimport {getPopularMovies} from '../../shared/api/api';\n\nimport styles from './home-page.module.scss';\n\nconst HomePage = () => {\n    const [state, setState] = useState({\n        items: [],\n        loading: false,\n        error: null,\n    })\n\n    const [option, setOption] = useState(\"day\");\n\n    useEffect(() => {\n        const fetchMovies = async() => {\n            setState(prevState => ({\n                items: [], \n                loading: true,\n                error: null,\n            }));\n            try {\n                const data = await getPopularMovies(option);\n                setState(prevState => {\n                    return {\n                        ...prevState,\n                        items: [...data]\n                    }\n                });\n            }\n            catch (error) {\n                setState(prevState => ({\n                    ...prevState,\n                    error,\n                }));\n            } finally {\n                setState(prevState => {\n                    return {\n                        ...prevState, \n                        loading: false }\n                });\n            }\n        }\n        fetchMovies();\n    }, [setState, option]);\n\n    const handleOptionChange = ({target}) => {\n        setOption(target.value);\n    }\n\n    const {items, loading} = state;\n\n    return(\n        <div className=\"container\">\n            <h2>Trending Movies</h2>\n\n            {/* options */}\n            <form>\n                <label className={styles.option}>\n                    <input \n                        type=\"radio\" \n                        name=\"option\" \n                        value=\"day\" \n                        onChange={handleOptionChange}\n                        checked={option === \"day\"}\n                    /> Day\n                </label>\n                <label className={styles.option}>\n                    <input \n                        type=\"radio\" \n                        name=\"option\" \n                        value=\"week\" \n                        onChange={handleOptionChange}\n                        checked={option === \"week\"}\n                    /> Week\n                </label>\n            </form>\n            {loading && <Loading />}\n            <MoviesList items={items} />\n        </div>\n    )\n}\n\nexport default HomePage;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n    params: {\n        api_key: \"280dfc47f55a5a95f0363880d2199c9a\",\n    }\n});\n\nexport const getPopularMovies = async(period) => {\n    const {data} = await instance.get(`/trending/movie/${period}`, {\n    })\n\n    return data.results;\n}\n\nexport const getMovieById = async(movie_id) => {\n    const {data} = await instance.get(`/movie/${movie_id}`, {})\n\n    return data;\n}\n\nexport const getReviews = async(movie_id) => {\n    const {data} = await instance.get(`/movie/${movie_id}/reviews`, {})\n\n    return data.results;\n}\n\nexport const getCast = async(movie_id) => {\n    const {data} = await instance.get(`/movie/${movie_id}/credits`, {})\n\n    return data.cast;\n}\n\nexport const searchMovies = async(query, page = 1) => {\n    const {data} = await instance.get(`/search/movie`, {\n        params: {\n            query,\n            page,\n        }\n    })\n\n    return data.results;\n}"],"names":["MoviesList","items","location","useLocation","elements","map","id","title","state","from","to","defaultProps","useState","loading","error","setState","option","setOption","useEffect","fetchMovies","prevState","getPopularMovies","data","handleOptionChange","target","value","className","styles","type","name","onChange","checked","Loading","instance","axios","baseURL","params","api_key","period","get","results","getMovieById","movie_id","getReviews","getCast","cast","searchMovies","query","page"],"sourceRoot":""}