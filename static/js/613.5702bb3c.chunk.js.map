{"version":3,"file":"static/js/613.5702bb3c.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/modules/MovieDetails/movie-details.module.scss?3a77","modules/MovieDetails/MovieDetails.jsx","webpack://react-homework-template/./src/pages/MovieDetailsPage/movie-details-page.module.scss?1a1a","pages/MovieDetailsPage/MovieDetailsPage.jsx","shared/api/api.js","shared/utils/utils.js","webpack://react-homework-template/./src/shared/components/Rating/rating.module.scss?02c3"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"movie-details_wrapper__os-VS\",\"poster\":\"movie-details_poster__ksvE2\",\"genreList\":\"movie-details_genreList__P4Lwv\",\"genre\":\"movie-details_genre__yKxQj\"};","// import PropTypes from 'prop-types';\n\nimport {countRatingPercentage} from '../../shared/utils/utils';\n\nimport styles from './movie-details.module.scss';\n\nconst MovieDetails = ({item}) => {\n    const {title, poster_path, vote_average, overview, genres = []} = item;\n    const genreList = genres.map(genre => <li key={genre.id} className={styles.genre}>{genre.name}</li>);\n    const percentage = countRatingPercentage(vote_average);\n    return (\n        <div className={styles.wrapper}>\n            <div className={styles.poster}>\n                <img src={`https://image.tmdb.org/t/p/w500${poster_path}`} width=\"300\" alt={title} />\n            </div>\n            <div>\n                <h1 className=\"title\">{title}</h1>\n                <p>User Score: {percentage}%</p>\n                <h3>Overview</h3>\n                <p>{overview}</p>\n                <h3>Genres</h3>\n                {genres && <ul className={styles.genreList}>\n                                {genreList}\n                            </ul>}\n            </div>\n        </div>\n    )\n}\n\nexport default MovieDetails;\n\n// MovieDetails.propTypes = {\n//     item: PropTypes.shape({\n//         title: PropTypes.string.isRequired,\n//         poster_path: PropTypes.string,\n//         vote_average: PropTypes.string.isRequired,\n//         overview: PropTypes.string.isRequired,\n//         genres: PropTypes.arrayOf(PropTypes.shape({\n//             name: PropTypes.string.isRequired,\n//             id: PropTypes.number.isRequired,\n//         })),\n//     })\n// }","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"movie-details-page_list__Cvdm2\",\"link\":\"movie-details-page_link__EoIAB\",\"active\":\"movie-details-page_active__7HkNa\"};","import {useState, useEffect} from 'react';\nimport {NavLink, Outlet, useParams, useNavigate, useLocation} from 'react-router-dom';\n\nimport MovieDetails from '../../modules/MovieDetails';\nimport Loading from '../../shared/components/Loading';\n\nimport styles from './movie-details-page.module.scss';\n\nimport {getMovieById} from '../../shared/api/api';\n\nconst MovieDetailsPage = () => {\n    const [state, setState] = useState({\n        item: {},\n        loading: false,\n        error: null,\n    });\n\n    const {movieId} = useParams();\n\n    const navigate = useNavigate();\n    const location = useLocation();\n    const from = location.state?.from || \"/goit-react-hw-05-movies\";\n\n    useEffect(() => {\n        const fetchMovieDetails = async() => {\n            setState(prevState => ({\n                ...prevState, \n                loading: true,\n                error: null,\n            }));\n            try {\n                const data = await getMovieById(movieId);\n                setState(prevState => {\n                    return {\n                        ...prevState,\n                        item: data,\n                    }\n                });\n            }\n            catch (error) {\n                setState(prevState => ({\n                    ...prevState,\n                    error,\n                }));\n            }\n            finally {\n                setState(prevState => {\n                    return {\n                        ...prevState, \n                        loading: false }\n                });\n            }\n        }\n        fetchMovieDetails();\n    }, [movieId, setState])\n\n    const goBack = () => navigate(from);\n\n    const {loading, error} = state;\n\n    const getClassList = ({isActive}) => {\n        return isActive ? `${styles.link} ${styles.active}` : styles.link;\n    }\n\n    return (\n        <div className=\"container\">\n            <button onClick={goBack}>Go back</button>\n\n            {loading && <Loading />}\n            {error && <p>Error</p>}\n\n            <MovieDetails item={state.item} />\n            <hr />\n            <p>Additional information</p>\n            <ul className={styles.list}>\n                <li>\n                    <NavLink className={getClassList} state={{from}} to={`/goit-react-hw-05-movies/movies/${movieId}/cast`}>Cast</NavLink>\n                </li>\n                <li>\n                    <NavLink className={getClassList} state={{from}} to={`/goit-react-hw-05-movies/movies/${movieId}/reviews`}>Reviews</NavLink>\n                </li>\n            </ul>\n            <Outlet />\n        </div>\n    )\n}\n\nexport default MovieDetailsPage;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n    params: {\n        api_key: \"280dfc47f55a5a95f0363880d2199c9a\",\n    }\n});\n\nexport const getTrendingMovies = async(period = \"day\", page = 1) => {\n    const {data} = await instance.get(`/trending/movie/${period}`, {\n        params: {\n            page,\n        }\n    })\n\n    return data.results;\n}\n\nexport const getMovieById = async(movie_id) => {\n    const {data} = await instance.get(`/movie/${movie_id}`, {})\n    return data;\n}\n\nexport const getReviews = async(movie_id) => {\n    const {data} = await instance.get(`/movie/${movie_id}/reviews`, {})\n    return data.results;\n}\n\nexport const getCast = async(movie_id) => {\n    const {data} = await instance.get(`/movie/${movie_id}/credits`, {})\n    return data.cast;\n}\n\nexport const searchMovies = async(query, page = 1) => {\n    const {data} = await instance.get(`/search/movie`, {\n        params: {\n            query,\n            page,\n        }\n    })\n\n    return data.results;\n}","import { format } from \"date-fns\";\n\nimport diagramStyles from '../../shared/components/Rating/rating.module.scss';\n\nexport const countRatingPercentage = (integer) => {\n    if (integer > 0) {\n        return Math.round(integer * 10);\n    }\n    return \"NR\";\n}\n\nexport const formatDate = (date) => {\n    if (date === null || date === \"\"  || date === undefined) {\n        return undefined;\n    }\n    const formatDate = date + \"T12:00:00\";\n    return format(Date.parse(formatDate), 'MMM dd, yyyy');\n}\n\nexport const getDiagramClassList = (rating) => {\n    let classList = \"\";\n    if(rating >= 70) {\n        classList = `${diagramStyles.progress} ${diagramStyles.heigh}`;\n    } else if (rating < 70 && rating >= 50) {\n        classList = `${diagramStyles.progress} ${diagramStyles.medium}`;\n    } else if (rating === \"NR\") {\n        classList = `${diagramStyles.progress} ${diagramStyles.nr}`;\n    } else {\n        classList = diagramStyles.progress;\n    }\n    return classList;\n}","// extracted by mini-css-extract-plugin\nexport default {\"rating\":\"rating_rating__hlgi+\",\"diagram\":\"rating_diagram__x-RaL\",\"circleBg\":\"rating_circleBg__qW11Z\",\"progress\":\"rating_progress__4Z1eL\",\"medium\":\"rating_medium__3UupM\",\"heigh\":\"rating_heigh__ptIiS\",\"nr\":\"rating_nr__+pm4b\",\"ratingNumber\":\"rating_ratingNumber__cBuLE\",\"percentSign\":\"rating_percentSign__oLwcY\"};"],"names":["item","title","poster_path","vote_average","overview","genres","genreList","map","genre","className","styles","name","id","percentage","countRatingPercentage","src","width","alt","useState","loading","error","state","setState","movieId","useParams","navigate","useNavigate","from","useLocation","useEffect","fetchMovieDetails","prevState","getMovieById","data","getClassList","isActive","onClick","Loading","to","instance","axios","baseURL","params","api_key","getTrendingMovies","period","page","get","results","movie_id","getReviews","getCast","cast","searchMovies","query","integer","Math","round","formatDate","date","undefined","format","Date","parse","getDiagramClassList","rating","diagramStyles"],"sourceRoot":""}