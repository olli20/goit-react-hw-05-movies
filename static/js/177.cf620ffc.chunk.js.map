{"version":3,"file":"static/js/177.cf620ffc.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/modules/CastList/cast-list.module.scss?5582","modules/CastList/CastList.jsx","pages/MovieCastPage/MovieCastPage.jsx","shared/api/api.js","webpack://react-homework-template/./src/shared/components/Error/error.module.scss?3b72","shared/components/Error/Error.jsx","webpack://react-homework-template/./src/shared/components/Grid/grid.module.scss?5271","shared/components/Grid/Grid.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"cast-list_item__lSLOK\",\"wrapper\":\"cast-list_wrapper__BM0dM\",\"poster\":\"cast-list_poster__+NNGa\",\"image\":\"cast-list_image__paZ4J\",\"meta\":\"cast-list_meta__riFjO\",\"name\":\"cast-list_name__+HQLE\",\"character\":\"cast-list_character__hx2wf\"};","import PropTypes from 'prop-types';\n\nimport Grid from '../../shared/components/Grid';\n\nimport styles from './cast-list.module.scss';\nimport defaultImage from '../../shared/images/default-avatar.png';\n\nconst CastList = ({items}) => {\n    const elements = items.map(({id, name, character, profile_path}) => {\n        const profileImage = profile_path?.length > 0 ? `https://image.tmdb.org/t/p/w500${profile_path}` : defaultImage;\n        return (\n            <div className={styles.item} key={id} >\n                <div className={styles.wrapper}>\n                    <div className={styles.poster}>\n                        <img className={styles.image} src={profileImage} alt={name} />\n                    </div>\n                    <div className={styles.meta}>\n                        <p className={styles.name}>{name}</p>\n                        <p className={styles.character}>{character}</p>\n                    </div>\n                </div>\n            </div>\n        )\n    })\n    console.log(\"CastList rendered\");\n    return (\n        <Grid type=\"actors\">\n            {elements}\n        </Grid>\n    )\n}\n\nexport default CastList;\n\nCastList.defaultProps = {\n    items: [],\n}\n\nCastList.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.number]).isRequired,\n        name: PropTypes.string.isRequired,\n        character: PropTypes.string.isRequired,\n        profile_path: PropTypes.string,\n    })).isRequired,\n}","import {useState, useEffect} from 'react';\nimport {useParams} from 'react-router-dom';\n\nimport {getCast} from '../../shared/api/api';\n\nimport Loading from '../../shared/components/Loading';\nimport Error from '../../shared/components/Error';\nimport CastList from '../../modules/CastList';\n\n// import styles from './movie-cast-page.modle.scss';\n\nconst MovieCastPage = () => {\n    const [state, setState] = useState({\n        items: [],\n        loading: false,\n        error: null,\n    });\n\n    const {movieId} = useParams();\n\n    useEffect(() => {\n        const fetchCast = async() => {\n            setState(prevState => ({\n                ...prevState, \n                loading: true,\n                error: null,\n            }));\n            try {\n                const cast = await getCast(movieId);\n                setState(prevState => {\n                    return {\n                        ...prevState,\n                        items: [...prevState.items, ...cast]\n                    }\n                });\n            } catch (error) {\n                setState(prevState => ({\n                    ...prevState,\n                    error,\n                }));\n            } finally {\n                setState(prevState => {\n                    return {\n                        ...prevState, \n                        loading: false }\n                });\n            }\n        }\n        fetchCast();\n    }, [movieId, setState]) \n\n    const {items, loading, error} = state;\n\n    return(\n        <div>\n            {loading && <Loading />}\n            {error && <Error>Some error occurred</Error>}\n            {items.length > 0 && <CastList items={items} />}\n        </div>\n    )\n}\n\nexport default MovieCastPage;","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'fe6ebdaf9b26884ef65376bf9a48ed3e',\n  },\n});\n\nexport const getTrendingMovies = async (period = 'day', page = 1) => {\n  const { data } = await instance.get(`/trending/movie/${period}`, {\n    params: {\n      page,\n    },\n  });\n  return data.results;\n};\n\nexport const getMovieById = async movie_id => {\n  const { data } = await instance.get(`/movie/${movie_id}`, {});\n  return data;\n};\n\nexport const getReviews = async movie_id => {\n  const { data } = await instance.get(`/movie/${movie_id}/reviews`, {});\n  return data.results;\n};\n\nexport const getCast = async movie_id => {\n  const { data } = await instance.get(`/movie/${movie_id}/credits`, {});\n  return data.cast;\n};\n\nexport const searchMovies = async (query, page = 1) => {\n  const { data } = await instance.get(`/search/movie`, {\n    params: {\n      query,\n      page,\n    },\n  });\n\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"error_wrapper__-2+js\",\"message\":\"error_message__rY-IE\"};","import PropTypes from 'prop-types';\n\nimport styles from './error.module.scss';\n\nconst Error = ({children}) => {\n    return (\n        <div className={styles.wrapper}>\n            <p className={styles.message}>{children}</p>\n        </div>\n    )\n}\n\nexport default Error;\n\nError.propTypes = {\n    children: PropTypes.string.isRequired,\n}","// extracted by mini-css-extract-plugin\nexport default {\"gird\":\"grid_gird__sWAvm\",\"actors\":\"grid_actors__lImlA\"};","import PropTypes from 'prop-types';\n\nimport Container from '../Container';\n\nimport styles from './grid.module.scss';\n\nconst Grid = ({type = \"default\", children}) => {\n    const getGridClassList = (type) => {\n        let list = \"\";\n        switch (type) {\n            case \"default\":\n                list = styles.gird;\n                break;\n            case \"actors\":\n                list = `${styles.gird} ${styles.actors}`;\n                break;\n            default:\n                list = styles.gird;\n        }\n        return list;\n    }\n\n    const classList = getGridClassList(type);\n    return (\n        <Container>\n            <div className={classList}>{children}</div>\n        </Container>\n    )\n}\n\nexport default Grid;\n\nGrid.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.element,\n        PropTypes.node]).isRequired,\n}"],"names":["CastList","elements","items","map","id","name","character","profile_path","profileImage","length","defaultImage","className","styles","src","alt","console","log","Grid","type","defaultProps","useState","loading","error","state","setState","movieId","useParams","useEffect","fetchCast","prevState","getCast","cast","Loading","Error","instance","axios","baseURL","params","api_key","getTrendingMovies","period","page","get","data","results","getMovieById","movie_id","getReviews","searchMovies","query","children","classList","list","getGridClassList","Container"],"sourceRoot":""}