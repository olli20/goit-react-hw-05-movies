{"version":3,"file":"static/js/177.a528ebd7.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/modules/CastList/cast-list.module.scss?5582","modules/CastList/CastList.jsx","pages/MovieCastPage/MovieCastPage.jsx","shared/api/api.js","webpack://react-homework-template/./src/shared/components/Error/error.module.scss?3b72","shared/components/Error/Error.jsx","webpack://react-homework-template/./src/shared/components/Grid/grid.module.scss?5271","shared/components/Grid/Grid.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"cast-list_item__lSLOK\",\"wrapper\":\"cast-list_wrapper__BM0dM\",\"poster\":\"cast-list_poster__+NNGa\",\"image\":\"cast-list_image__paZ4J\",\"meta\":\"cast-list_meta__riFjO\",\"name\":\"cast-list_name__+HQLE\",\"character\":\"cast-list_character__hx2wf\"};","import PropTypes from 'prop-types';\n\nimport Grid from '../../shared/components/Grid';\n\nimport styles from './cast-list.module.scss';\n\nimport defaultImage from '../../shared/images/default-avatar.png';\n\nconst CastList = ({items}) => {\n    const elements = items.map(({id, name, character, profile_path}) => {\n        const profileImage = profile_path?.length > 0 ? `https://image.tmdb.org/t/p/w500${profile_path}` : defaultImage;\n        return (\n            <div className={styles.item} key={id} >\n                <div className={styles.wrapper}>\n                    <div className={styles.poster}>\n                        <img className={styles.image} src={profileImage} alt={name} />\n                    </div>\n                    <div className={styles.meta}>\n                        <p className={styles.name}>{name}</p>\n                        <p className={styles.character}>{character}</p>\n                    </div>\n                </div>\n            </div>\n        )\n    })\n    return (\n        <Grid type=\"actors\">\n            {elements}\n        </Grid>\n    )\n}\n\nexport default CastList;\n\nCastList.defaultProps = {\n    items: [],\n}\n\nCastList.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        character: PropTypes.string.isRequired,\n        profile_path: PropTypes.string,\n    })).isRequired,\n}","import {useState, useEffect} from 'react';\nimport {useParams} from 'react-router-dom';\n\nimport {getCast} from '../../shared/api/api';\n\nimport Loading from '../../shared/components/Loading';\nimport Error from '../../shared/components/Error';\nimport CastList from '../../modules/CastList';\n\n// import styles from './movie-cast-page.modle.scss';\n\nconst MovieCastPage = () => {\n    const [state, setState] = useState({\n        items: [],\n        loading: false,\n        error: null,\n    });\n\n    const {movieId} = useParams();\n\n    useEffect(() => {\n        const fetchCast = async() => {\n            setState(prevState => ({\n                ...prevState, \n                loading: true,\n                error: null,\n            }));\n            try {\n                const cast = await getCast(movieId);\n                setState(prevState => {\n                    return {\n                        ...prevState,\n                        items: [...prevState.items, ...cast]\n                    }\n                });\n            } catch (error) {\n                setState(prevState => ({\n                    ...prevState,\n                    error,\n                }));\n            } finally {\n                setState(prevState => {\n                    return {\n                        ...prevState, \n                        loading: false }\n                });\n            }\n        }\n        fetchCast();\n    }, [movieId, setState]) \n\n    const {items, loading, error} = state;\n\n    return(\n        <div>\n            {loading && <Loading />}\n            {error && <Error>Some error occured</Error>}\n            {items.length > 0 && <CastList items={items} />}\n        </div>\n    )\n}\n\nexport default MovieCastPage;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n    params: {\n        api_key: \"280dfc47f55a5a95f0363880d2199c9a\",\n    }\n});\n\nexport const getTrendingMovies = async(period = \"day\", page = 1) => {\n    const {data} = await instance.get(`/trending/movie/${period}`, {\n        params: {\n            page,\n        }\n    })\n\n    return data.results;\n}\n\nexport const getMovieById = async(movie_id) => {\n    const {data} = await instance.get(`/movie/${movie_id}`, {})\n    return data;\n}\n\nexport const getReviews = async(movie_id) => {\n    const {data} = await instance.get(`/movie/${movie_id}/reviews`, {})\n    return data.results;\n}\n\nexport const getCast = async(movie_id) => {\n    const {data} = await instance.get(`/movie/${movie_id}/credits`, {})\n    return data.cast;\n}\n\nexport const searchMovies = async(query, page = 1) => {\n    const {data} = await instance.get(`/search/movie`, {\n        params: {\n            query,\n            page,\n        }\n    })\n\n    return data.results;\n}","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"error_wrapper__-2+js\",\"message\":\"error_message__rY-IE\"};","// import Card from '../Card';\nimport Container from '../Container';\n\nimport styles from './error.module.scss';\n\nconst Error = ({children}) => {\n    return (\n        <Container>\n            <div className={styles.wrapper}>\n                <p className={styles.message}>{children}</p>\n            </div>\n        </Container>\n    )\n}\n\nexport default Error;","// extracted by mini-css-extract-plugin\nexport default {\"gird\":\"grid_gird__sWAvm\",\"actors\":\"grid_actors__lImlA\"};","import Container from '../Container';\n\nimport styles from './grid.module.scss';\n\nconst Grid = ({type = \"default\", children}) => {\n    const getGridClassList = (type) => {\n        let list = \"\";\n        switch (type) {\n            case \"default\":\n                list = styles.gird;\n                break;\n            case \"actors\":\n                list = `${styles.gird} ${styles.actors}`;\n                break;\n            default:\n                list = styles.gird;\n        }\n        return list;\n    }\n\n    const classList = getGridClassList(type);\n    return (\n        <Container>\n            <div className={classList}>{children}</div>\n        </Container>\n    )\n}\n\nexport default Grid;"],"names":["CastList","elements","items","map","id","name","character","profile_path","profileImage","length","defaultImage","className","styles","src","alt","Grid","type","defaultProps","useState","loading","error","state","setState","movieId","useParams","useEffect","fetchCast","prevState","getCast","cast","Loading","Error","instance","axios","baseURL","params","api_key","getTrendingMovies","period","page","get","data","results","getMovieById","movie_id","getReviews","searchMovies","query","children","Container","classList","list","getGridClassList"],"sourceRoot":""}